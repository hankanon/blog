{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"d14c34e3f67c5d6c95ca5658992fdd9a9e0ba011","modified":1521183227000},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1516083912000},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1516083912000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1516083912000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1516083912000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1516083912000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1516083912000},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1516083912000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1516083912000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1516083912000},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1516083912000},{"_id":"themes/next/README.md","hash":"44b28d995681a7c48bfe3d0577d6203812d07e59","modified":1516083912000},{"_id":"themes/next/README.cn.md","hash":"5d8af3d8de8d3926126a738519e97c8442b0effe","modified":1516083912000},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1516083912000},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1516083912000},{"_id":"themes/next/_config.yml","hash":"3a0e7acd6002a75b819bd242b63cf49e2da26bc0","modified":1620560640421},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1516083912000},{"_id":"source/_posts/响应式原理.md","hash":"8b2e572a328b54b41470f9edd05f04abfb182121","modified":1620561844206},{"_id":"source/_posts/单例模式.md","hash":"e8d917930eaeaae8cac3ec354fd44deef29f3526","modified":1547270443678},{"_id":"source/_posts/工厂方法模式.md","hash":"9b3fcd7da3b493f01a4d81c4df60af95883cc43b","modified":1620560152838},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1516076490000},{"_id":"source/_posts/test.md","hash":"8592fde6c267bc37ceb0056bb878addf886ef5e8","modified":1516248839000},{"_id":"source/categories/index.md","hash":"ac73f2dc4b5cece03248d693a2976bb7911d0dfe","modified":1521184894000},{"_id":"source/tags/index.md","hash":"96ec8f4aded9e4d9f23521647cd5f6633bb1e95e","modified":1521184875000},{"_id":"source/_posts/开发小技巧.md","hash":"0360114f8e4a6120d968b27c8b7c51189a3a0085","modified":1620561607156},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1516083912000},{"_id":"themes/next/.git/config","hash":"bf7d1df65cf34d0f25a7184a58c37a09f72e4be7","modified":1516083912000},{"_id":"themes/next/.git/index","hash":"270a80a0060e327482dbb45dfb2ea0d1a20b6161","modified":1547269567218},{"_id":"themes/next/.git/packed-refs","hash":"339779e225d913a344c5e6210617badd049c4434","modified":1516083912000},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1516083896000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1516083912000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1516083912000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"352093a1b210c72136687fd2eee649244cee402c","modified":1516083912000},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1516083912000},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1522469938000},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1516083912000},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1516083912000},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1516083912000},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1516083912000},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1516083912000},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1516083912000},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1516083912000},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1516083912000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1516083912000},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1516083912000},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1516083912000},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1516083912000},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1516083912000},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1516083912000},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1516083912000},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1516083912000},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1516083912000},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1516083912000},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1516083912000},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1516083912000},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1516083912000},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1516083912000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1516083912000},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1516083912000},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1516083912000},{"_id":"themes/next/source/.DS_Store","hash":"255233b382be0d2f49782ab5915fe94e2d897093","modified":1547270886972},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1516083912000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1516083912000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1516083912000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1516083912000},{"_id":"themes/next/.git/info/exclude","hash":"bb5a85730dcf100facee799c05cc4f6affec0745","modified":1516083896000},{"_id":"themes/next/.git/logs/HEAD","hash":"e911fad6ee0b5b8c61b08b7059e0d23c6d85aaec","modified":1516083912000},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1516083896000},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1516083896000},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1516083896000},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1516083896000},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1516083896000},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1516083896000},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1516083896000},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1516083896000},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1516083896000},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1516083896000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1516083912000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1516083912000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1516083912000},{"_id":"themes/next/layout/_macro/passage-end-tag.swig","hash":"ff10d9a2a451568b5ec0fb3d9884af458fd596cf","modified":1522468534000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1516083912000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1516083912000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1516083912000},{"_id":"themes/next/layout/_macro/post.swig","hash":"9aa65c0cebb49faefc8ca2030aa524e53427a8ec","modified":1522468132000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1516083912000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1516083912000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"160746aef421377384ba8c2385afb1e253a3b33c","modified":1522469172000},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1516083912000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1516083912000},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1516083912000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1516083912000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1516083912000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1516083912000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1516083912000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1516083912000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1516083912000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1516083912000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1516083912000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1516083912000},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1516083912000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1516083912000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1516083912000},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1516083912000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1516083912000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1516083912000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1516083912000},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1516083912000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1516083912000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1516083912000},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1516083912000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1516083912000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1516083912000},{"_id":"themes/next/source/images/.DS_Store","hash":"305b21fea241273bad16171631972a3bb888c80b","modified":1547270095120},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1516083912000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1516083912000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1516083912000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1516083912000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1516083912000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1516083912000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1516083912000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1516083912000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1516083912000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1516083912000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1516083912000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1516083912000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1516083912000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1516083912000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1516083912000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1516083912000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1516083912000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1516083912000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1516083912000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1516083912000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1516083912000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1516083912000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1516083912000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1516083912000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1516083912000},{"_id":"themes/next/source/images/avatar.png","hash":"a7a9e37995938713f95944a83204d58d9836caf9","modified":1532258053000},{"_id":"themes/next/.git/refs/heads/master","hash":"f4d9f6f8bc79e9bc071cf29324a74a1d78158ab9","modified":1516083912000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1516083912000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1516083912000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1516083912000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1516083912000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1516083912000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1516083912000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1516083912000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1516083912000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1516083912000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1516083912000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1516083912000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1516083912000},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1516083912000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1516083912000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1516083912000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1516083912000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1516083912000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1516083912000},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1516083912000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1516083912000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1516083912000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1516083912000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1516083912000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1516083912000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1516083912000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1516083912000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1516083912000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1516083912000},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1516083912000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1516083912000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1516083912000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1516083912000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1516083912000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1516083912000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1516083912000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1516083912000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1516083912000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1516083912000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1516083912000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1516083912000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1516083912000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"d915344a75b8eb335046906962a6ba696e73a1fa","modified":1522470511000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1516083912000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1516083912000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1516083912000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1516083912000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1516083912000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1516083912000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1516083912000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1516083912000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1516083912000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1516083912000},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1516083912000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1516083912000},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1516083912000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1516083912000},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1516083912000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1516083912000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1516083912000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1516083912000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1516083912000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1516083912000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1516083912000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1516083912000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1516083912000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1516083912000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1516083912000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1516083912000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1516083912000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1516083912000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1516083912000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1516083912000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1516083912000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1516083912000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1516083912000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1516083912000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1516083912000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1516083912000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1516083912000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1516083912000},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1516083912000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1516083912000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1516083912000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1516083912000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1516083912000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1516083912000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1516083912000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1516083912000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1516083912000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1516083912000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1516083912000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1516083912000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1516083912000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1516083912000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1516083912000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1516083912000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1516083912000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1516083912000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1516083912000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1516083912000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1516083912000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1516083912000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1516083912000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1516083912000},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"e911fad6ee0b5b8c61b08b7059e0d23c6d85aaec","modified":1516083912000},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1516083912000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1516083912000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1516083912000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1516083912000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1516083912000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1516083912000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1516083912000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1516083912000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1516083912000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1516083912000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1516083912000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1516083912000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1516083912000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1516083912000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1516083912000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1516083912000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1516083912000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1516083912000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1516083912000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1516083912000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4aac01962520d60b03b23022ab601ad4bd19c08c","modified":1516083912000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1516083912000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1516083912000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1516083912000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1516083912000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1516083912000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1516083912000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1516083912000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1516083912000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1516083912000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1516083912000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1516083912000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1516083912000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1516083912000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1516083912000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1516083912000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1516083912000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1516083912000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1516083912000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1516083912000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1516083912000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1516083912000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1516083912000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1516083912000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1516083912000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1516083912000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1516083912000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1516083912000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1516083912000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1516083912000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1516083912000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1516083912000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1516083912000},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"e911fad6ee0b5b8c61b08b7059e0d23c6d85aaec","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1516083912000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1516083912000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1516083912000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1516083912000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1516083912000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1516083912000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1516083912000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1516083912000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1516083912000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1516083912000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1516083912000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1516083912000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1516083912000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1516083912000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1516083912000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1516083912000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1516083912000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1516083912000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1516083912000},{"_id":"themes/next/.git/objects/pack/pack-43ca19f05a7eafaedc751ec6ae895cd343f93cae.idx","hash":"c637758f1196f2aeae22bf87c40dee268b82109e","modified":1516083912000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1516083912000},{"_id":"themes/next/source/images/avatar.jpg","hash":"aa030e0c37089d6ad6e9c3d2469c45e6d5953525","modified":1547213325249},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1516083912000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1516083912000},{"_id":"themes/next/.git/objects/pack/pack-43ca19f05a7eafaedc751ec6ae895cd343f93cae.pack","hash":"886bc64f4f16bf15797490c12a53f33b839e38f5","modified":1516083912000}],"Category":[{"name":"设计模式","_id":"ckoh4vrfo0004e7s64xcv1blq"},{"name":"开发小技巧","_id":"ckoh4vrg0000be7s60yovaebh"},{"name":"Vue3","_id":"ckoh4vrhh000qe7s6saa3fggp"}],"Data":[],"Page":[{"title":"分类","date":"2018-01-18T04:08:36.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2018-01-18 12:08:36\ntype: \"categories\"\ncomments: false\n---\n","updated":"2018-03-16T07:21:34.000Z","path":"categories/index.html","layout":"page","_id":"ckoh4vrfh0001e7s6vyhpyphs","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2018-01-18T04:06:24.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2018-01-18 12:06:24\ntype: \"tags\"\ncomments: false\n---","updated":"2018-03-16T07:21:15.000Z","path":"tags/index.html","layout":"page","_id":"ckoh4vrfl0003e7s6gzv10fhj","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"单例模式","date":"2018-04-14T09:08:45.000Z","_content":"### 设计模式\n####  《设计模式:可复用 面向对象软件的基础》\n\n设计模式大体分为一下三种\n    \n    1.  创建型模式:涉及对象的创建与初始化。\n    2.  结构型模式:描述了如何组合对象以提供新的功能。 \n    3.  行为型模式:描述了对象之间如何通信。\n\n##### 单例模式\n    当我们需要创建一种类型或一个类的唯一对象时，就可以使用该模式，（单利模式创建的对象都是相同的，也就是创建的同一个对象）\n    var a = new Single()\n    var b = new Single()\n    console.log(a === b) //true\n\n##### 实现方式\n    1.JavaScript 中最基本的单件模式实现是使用对象文本标识法:\n    \n      var single = {};\n    ————————————————————————————————————————————————————————————————————————————————————————————————————————————— \n    2.全局变量方法\n    \n    function Logger() {\n    if (typeof global_log === \"undefined\") {\n        global_log = this; \n    }\n        return global_log;\n    }\n    var a = new Logger();\n    var b = new Logger();\n    console.log(a === b); // true\n    \n    缺陷是使用了全局变量，它在任何时候都有可能被覆盖掉，从而导致实例丢失\n    \n    ————————————————————————————————————————————————————————————————————————————————————————————————————————————— \n    3.使用构造器属性\n    \n    function Single() {\n        if (!Single.single_instance) {\n            Single.single_instance = this; \n        }\n        return Single.single_instance; \n    }\n    \n    var a = new Single();\n    var b = new Single()\n    console.log(a === b)\n    \n    缺点 构造器的属性是公有的，因此它随时有可能会被覆盖，如此一来，这个唯一实例可能会被丢失或被修改\n    \n    —————————————————————————————————————————————————————————————————————————————————————————————————————————————\n    4.使用私有属性\n    \n    var Single = (function() {\n        var instance;\n        var Single = function() {\n            if (instance) {\n                return instance;\n            }\n            return instance = this;\n           \n        };\n    \n        Single.prototype.init = function() {}\n    \n        return Single;\n    })();\n    \n    var a = new Single();\n    var b = new Single();\n    console.log(a === b) //true\n    \n    —————————————————————————————————————————————————————————————————————————————————————————————————————————————","source":"_posts/单例模式.md","raw":"---\ntitle: 单例模式\ndate: 2018-04-14 17:08:45\ntags:\n- JavaScript\n- 设计模式\ncategories: \n- 设计模式\n---\n### 设计模式\n####  《设计模式:可复用 面向对象软件的基础》\n\n设计模式大体分为一下三种\n    \n    1.  创建型模式:涉及对象的创建与初始化。\n    2.  结构型模式:描述了如何组合对象以提供新的功能。 \n    3.  行为型模式:描述了对象之间如何通信。\n\n##### 单例模式\n    当我们需要创建一种类型或一个类的唯一对象时，就可以使用该模式，（单利模式创建的对象都是相同的，也就是创建的同一个对象）\n    var a = new Single()\n    var b = new Single()\n    console.log(a === b) //true\n\n##### 实现方式\n    1.JavaScript 中最基本的单件模式实现是使用对象文本标识法:\n    \n      var single = {};\n    ————————————————————————————————————————————————————————————————————————————————————————————————————————————— \n    2.全局变量方法\n    \n    function Logger() {\n    if (typeof global_log === \"undefined\") {\n        global_log = this; \n    }\n        return global_log;\n    }\n    var a = new Logger();\n    var b = new Logger();\n    console.log(a === b); // true\n    \n    缺陷是使用了全局变量，它在任何时候都有可能被覆盖掉，从而导致实例丢失\n    \n    ————————————————————————————————————————————————————————————————————————————————————————————————————————————— \n    3.使用构造器属性\n    \n    function Single() {\n        if (!Single.single_instance) {\n            Single.single_instance = this; \n        }\n        return Single.single_instance; \n    }\n    \n    var a = new Single();\n    var b = new Single()\n    console.log(a === b)\n    \n    缺点 构造器的属性是公有的，因此它随时有可能会被覆盖，如此一来，这个唯一实例可能会被丢失或被修改\n    \n    —————————————————————————————————————————————————————————————————————————————————————————————————————————————\n    4.使用私有属性\n    \n    var Single = (function() {\n        var instance;\n        var Single = function() {\n            if (instance) {\n                return instance;\n            }\n            return instance = this;\n           \n        };\n    \n        Single.prototype.init = function() {}\n    \n        return Single;\n    })();\n    \n    var a = new Single();\n    var b = new Single();\n    console.log(a === b) //true\n    \n    —————————————————————————————————————————————————————————————————————————————————————————————————————————————","slug":"单例模式","published":1,"updated":"2019-01-12T05:20:43.678Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckoh4vrfa0000e7s67n8w1f9x","content":"<h3 id=\"设计模式\"><a href=\"#设计模式\" class=\"headerlink\" title=\"设计模式\"></a>设计模式</h3><h4 id=\"《设计模式-可复用-面向对象软件的基础》\"><a href=\"#《设计模式-可复用-面向对象软件的基础》\" class=\"headerlink\" title=\"《设计模式:可复用 面向对象软件的基础》\"></a>《设计模式:可复用 面向对象软件的基础》</h4><p>设计模式大体分为一下三种</p>\n<pre><code>1.  创建型模式:涉及对象的创建与初始化。\n2.  结构型模式:描述了如何组合对象以提供新的功能。 \n3.  行为型模式:描述了对象之间如何通信。\n</code></pre><h5 id=\"单例模式\"><a href=\"#单例模式\" class=\"headerlink\" title=\"单例模式\"></a>单例模式</h5><pre><code>当我们需要创建一种类型或一个类的唯一对象时，就可以使用该模式，（单利模式创建的对象都是相同的，也就是创建的同一个对象）\nvar a = new Single()\nvar b = new Single()\nconsole.log(a === b) //true\n</code></pre><h5 id=\"实现方式\"><a href=\"#实现方式\" class=\"headerlink\" title=\"实现方式\"></a>实现方式</h5><pre><code>1.JavaScript 中最基本的单件模式实现是使用对象文本标识法:\n\n  var single = {};\n————————————————————————————————————————————————————————————————————————————————————————————————————————————— \n2.全局变量方法\n\nfunction Logger() {\nif (typeof global_log === &quot;undefined&quot;) {\n    global_log = this; \n}\n    return global_log;\n}\nvar a = new Logger();\nvar b = new Logger();\nconsole.log(a === b); // true\n\n缺陷是使用了全局变量，它在任何时候都有可能被覆盖掉，从而导致实例丢失\n\n————————————————————————————————————————————————————————————————————————————————————————————————————————————— \n3.使用构造器属性\n\nfunction Single() {\n    if (!Single.single_instance) {\n        Single.single_instance = this; \n    }\n    return Single.single_instance; \n}\n\nvar a = new Single();\nvar b = new Single()\nconsole.log(a === b)\n\n缺点 构造器的属性是公有的，因此它随时有可能会被覆盖，如此一来，这个唯一实例可能会被丢失或被修改\n\n—————————————————————————————————————————————————————————————————————————————————————————————————————————————\n4.使用私有属性\n\nvar Single = (function() {\n    var instance;\n    var Single = function() {\n        if (instance) {\n            return instance;\n        }\n        return instance = this;\n\n    };\n\n    Single.prototype.init = function() {}\n\n    return Single;\n})();\n\nvar a = new Single();\nvar b = new Single();\nconsole.log(a === b) //true\n\n—————————————————————————————————————————————————————————————————————————————————————————————————————————————\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"设计模式\"><a href=\"#设计模式\" class=\"headerlink\" title=\"设计模式\"></a>设计模式</h3><h4 id=\"《设计模式-可复用-面向对象软件的基础》\"><a href=\"#《设计模式-可复用-面向对象软件的基础》\" class=\"headerlink\" title=\"《设计模式:可复用 面向对象软件的基础》\"></a>《设计模式:可复用 面向对象软件的基础》</h4><p>设计模式大体分为一下三种</p>\n<pre><code>1.  创建型模式:涉及对象的创建与初始化。\n2.  结构型模式:描述了如何组合对象以提供新的功能。 \n3.  行为型模式:描述了对象之间如何通信。\n</code></pre><h5 id=\"单例模式\"><a href=\"#单例模式\" class=\"headerlink\" title=\"单例模式\"></a>单例模式</h5><pre><code>当我们需要创建一种类型或一个类的唯一对象时，就可以使用该模式，（单利模式创建的对象都是相同的，也就是创建的同一个对象）\nvar a = new Single()\nvar b = new Single()\nconsole.log(a === b) //true\n</code></pre><h5 id=\"实现方式\"><a href=\"#实现方式\" class=\"headerlink\" title=\"实现方式\"></a>实现方式</h5><pre><code>1.JavaScript 中最基本的单件模式实现是使用对象文本标识法:\n\n  var single = {};\n————————————————————————————————————————————————————————————————————————————————————————————————————————————— \n2.全局变量方法\n\nfunction Logger() {\nif (typeof global_log === &quot;undefined&quot;) {\n    global_log = this; \n}\n    return global_log;\n}\nvar a = new Logger();\nvar b = new Logger();\nconsole.log(a === b); // true\n\n缺陷是使用了全局变量，它在任何时候都有可能被覆盖掉，从而导致实例丢失\n\n————————————————————————————————————————————————————————————————————————————————————————————————————————————— \n3.使用构造器属性\n\nfunction Single() {\n    if (!Single.single_instance) {\n        Single.single_instance = this; \n    }\n    return Single.single_instance; \n}\n\nvar a = new Single();\nvar b = new Single()\nconsole.log(a === b)\n\n缺点 构造器的属性是公有的，因此它随时有可能会被覆盖，如此一来，这个唯一实例可能会被丢失或被修改\n\n—————————————————————————————————————————————————————————————————————————————————————————————————————————————\n4.使用私有属性\n\nvar Single = (function() {\n    var instance;\n    var Single = function() {\n        if (instance) {\n            return instance;\n        }\n        return instance = this;\n\n    };\n\n    Single.prototype.init = function() {}\n\n    return Single;\n})();\n\nvar a = new Single();\nvar b = new Single();\nconsole.log(a === b) //true\n\n—————————————————————————————————————————————————————————————————————————————————————————————————————————————\n</code></pre>"},{"title":"工厂方法模式","date":"2021-05-09T11:35:06.000Z","_content":"\n## 简介\n工厂方法模式属于创建行模式，对new() 操作符用方法进行封装。\n## 方法演变过程\n    用工厂生产产品进行举例\n##### 一个工厂生产一种产品\n![](https://gitee.com/hankanon/public/raw/master/20210509184510.png)\n##### 多个工厂生产多个产品\n![](https://gitee.com/hankanon/public/raw/master/20210509184733.png)\n抽象不依赖具体，依赖抽象，\n![](https://gitee.com/hankanon/public/raw/master/20210509185148.png)\n##### 多个产品方法改造\n提供基类工厂方法和基类的产品方法，每个产品方法有具体的工厂实现方法\n![](https://gitee.com/hankanon/public/raw/master/20210509184520.png)\n\n## JS中的应用\n\n* Jquery\n```js\nclass Jquery{\n    constructor(el){\n        this.el = el\n    }\n    addclass(){}\n    css(){}\n}\n\nfunction $(el) {\n    return new Jquery(el)\n}\n```\n\n* React\n```js\nReact.createElement('div',null,[ \n    React.createElement('span', null, 'aaaaa'),\n    React.createElement('img', {src: ''})]\n)\n```\n\n* Vue 异步组件\n```js\nVue.component('',()=>{})\n```\n## 个人想法\n**工厂生产产品，每一个产品对应一个实现该产品的工厂方法，依据依赖倒置原则，抽象不依赖细节，细节依赖抽象。每个产品的实现都是细节，针对产品提取抽象类，同理产品的工厂方法类似，提取抽象的工厂方法**\n## 代码实现\n##### JavaScript代码实现\n```js\n// 产品\nclass Product {\n    constructor(name){\n        this.name = name;\n    }\n    init(){\n        alert('init');\n    }\n    fun1(){\n        alert('fun1')\n    }\n    fun2(){\n        alert('fun2')\n    }\n}\n// 工厂创建产品\nclass Creator {\n    create(name){\n        return new Product(name)\n    }\n}\n\nlet creator = new Creator();\nlet p = new creator.create('p1');\n\np.init();\np.fun1();\n```\n\n##### typescript代码实现\n```ts\n// 工厂的抽象基类\nabstract class Creator {\n    // 产品的创建方法，\n    public abstract factoryMethod(): Product;   // 返回类型是 基类的产品类型 \n    // 操作\n    public someOperation(): string {\n        // Call the factory method to create a Product object.\n        const product = this.factoryMethod();\n        return `Creator: The same creator's code has just worked with ${product.operation()}`;\n    }\n}\n\n// 工厂的具体实现类，每个产品对应具体的创建工厂\nclass ConcreteCreator1 extends Creator {\n    public factoryMethod(): Product {\n        return new ConcreteProduct1();\n    }\n}\n\nclass ConcreteCreator2 extends Creator {\n    public factoryMethod(): Product {\n        return new ConcreteProduct2();\n    }\n}\n\n// 产品的基类（接口）\ninterface Product {\n    operation(): string;\n}\n\n// 具体的产品\nclass ConcreteProduct1 implements Product {\n    public operation(): string {\n        return '{Result of the ConcreteProduct1}';\n    }\n}\n\nclass ConcreteProduct2 implements Product {\n    public operation(): string {\n        return '{Result of the ConcreteProduct2}';\n    }\n}\n\n// 用户操作\nfunction clientCode(creator: Creator) {\n    // ...\n    console.log('Client: I\\'m not aware of the creator\\'s class, but it still works.');\n    console.log(creator.someOperation());\n    // ...\n}\n\n// 创建第一个产品\nconsole.log('App: Launched with the ConcreteCreator1.');\nclientCode(new ConcreteCreator1());\nconsole.log('');\n\n// 创建第二个产品\nconsole.log('App: Launched with the ConcreteCreator2.');\nclientCode(new ConcreteCreator2());\n```\n\n    优点：\n    对象的创建和产品的实现进行隔离\n    增加新的产品无需更改现有的产品代码\n    缺点：\n    每个产品都要有各自对应的工厂方法\n \n 你可以避免创建者和具体产品之间的紧密耦合。\n 单一职责原则。 你可以将产品创建代码放在程序的单一位置， 从而使得代码更容易维护。\n 开闭原则。 无需更改现有客户端代码， 你就可以在程序中引入新的产品类型。\n \n 应用工厂方法模式需要引入许多新的子类， 代码可能会因此变得更复杂。 最好的情况是将该模式引入创建者类的现有层次结构中。\n \n 参考：[工厂方法模式](https://refactoringguru.cn/design-patterns/factory-method)\n\n\n","source":"_posts/工厂方法模式.md","raw":"---\ntitle: 工厂方法模式\ndate: 2021-05-09 19:35:06\ntags:\n- JavaScript\n- 设计模式\ncategories: \n- 设计模式\n---\n\n## 简介\n工厂方法模式属于创建行模式，对new() 操作符用方法进行封装。\n## 方法演变过程\n    用工厂生产产品进行举例\n##### 一个工厂生产一种产品\n![](https://gitee.com/hankanon/public/raw/master/20210509184510.png)\n##### 多个工厂生产多个产品\n![](https://gitee.com/hankanon/public/raw/master/20210509184733.png)\n抽象不依赖具体，依赖抽象，\n![](https://gitee.com/hankanon/public/raw/master/20210509185148.png)\n##### 多个产品方法改造\n提供基类工厂方法和基类的产品方法，每个产品方法有具体的工厂实现方法\n![](https://gitee.com/hankanon/public/raw/master/20210509184520.png)\n\n## JS中的应用\n\n* Jquery\n```js\nclass Jquery{\n    constructor(el){\n        this.el = el\n    }\n    addclass(){}\n    css(){}\n}\n\nfunction $(el) {\n    return new Jquery(el)\n}\n```\n\n* React\n```js\nReact.createElement('div',null,[ \n    React.createElement('span', null, 'aaaaa'),\n    React.createElement('img', {src: ''})]\n)\n```\n\n* Vue 异步组件\n```js\nVue.component('',()=>{})\n```\n## 个人想法\n**工厂生产产品，每一个产品对应一个实现该产品的工厂方法，依据依赖倒置原则，抽象不依赖细节，细节依赖抽象。每个产品的实现都是细节，针对产品提取抽象类，同理产品的工厂方法类似，提取抽象的工厂方法**\n## 代码实现\n##### JavaScript代码实现\n```js\n// 产品\nclass Product {\n    constructor(name){\n        this.name = name;\n    }\n    init(){\n        alert('init');\n    }\n    fun1(){\n        alert('fun1')\n    }\n    fun2(){\n        alert('fun2')\n    }\n}\n// 工厂创建产品\nclass Creator {\n    create(name){\n        return new Product(name)\n    }\n}\n\nlet creator = new Creator();\nlet p = new creator.create('p1');\n\np.init();\np.fun1();\n```\n\n##### typescript代码实现\n```ts\n// 工厂的抽象基类\nabstract class Creator {\n    // 产品的创建方法，\n    public abstract factoryMethod(): Product;   // 返回类型是 基类的产品类型 \n    // 操作\n    public someOperation(): string {\n        // Call the factory method to create a Product object.\n        const product = this.factoryMethod();\n        return `Creator: The same creator's code has just worked with ${product.operation()}`;\n    }\n}\n\n// 工厂的具体实现类，每个产品对应具体的创建工厂\nclass ConcreteCreator1 extends Creator {\n    public factoryMethod(): Product {\n        return new ConcreteProduct1();\n    }\n}\n\nclass ConcreteCreator2 extends Creator {\n    public factoryMethod(): Product {\n        return new ConcreteProduct2();\n    }\n}\n\n// 产品的基类（接口）\ninterface Product {\n    operation(): string;\n}\n\n// 具体的产品\nclass ConcreteProduct1 implements Product {\n    public operation(): string {\n        return '{Result of the ConcreteProduct1}';\n    }\n}\n\nclass ConcreteProduct2 implements Product {\n    public operation(): string {\n        return '{Result of the ConcreteProduct2}';\n    }\n}\n\n// 用户操作\nfunction clientCode(creator: Creator) {\n    // ...\n    console.log('Client: I\\'m not aware of the creator\\'s class, but it still works.');\n    console.log(creator.someOperation());\n    // ...\n}\n\n// 创建第一个产品\nconsole.log('App: Launched with the ConcreteCreator1.');\nclientCode(new ConcreteCreator1());\nconsole.log('');\n\n// 创建第二个产品\nconsole.log('App: Launched with the ConcreteCreator2.');\nclientCode(new ConcreteCreator2());\n```\n\n    优点：\n    对象的创建和产品的实现进行隔离\n    增加新的产品无需更改现有的产品代码\n    缺点：\n    每个产品都要有各自对应的工厂方法\n \n 你可以避免创建者和具体产品之间的紧密耦合。\n 单一职责原则。 你可以将产品创建代码放在程序的单一位置， 从而使得代码更容易维护。\n 开闭原则。 无需更改现有客户端代码， 你就可以在程序中引入新的产品类型。\n \n 应用工厂方法模式需要引入许多新的子类， 代码可能会因此变得更复杂。 最好的情况是将该模式引入创建者类的现有层次结构中。\n \n 参考：[工厂方法模式](https://refactoringguru.cn/design-patterns/factory-method)\n\n\n","slug":"工厂方法模式","published":1,"updated":"2021-05-09T11:35:52.838Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckoh4vrfj0002e7s6053o58g8","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>工厂方法模式属于创建行模式，对new() 操作符用方法进行封装。</p>\n<h2 id=\"方法演变过程\"><a href=\"#方法演变过程\" class=\"headerlink\" title=\"方法演变过程\"></a>方法演变过程</h2><pre><code>用工厂生产产品进行举例\n</code></pre><h5 id=\"一个工厂生产一种产品\"><a href=\"#一个工厂生产一种产品\" class=\"headerlink\" title=\"一个工厂生产一种产品\"></a>一个工厂生产一种产品</h5><p><img src=\"https://gitee.com/hankanon/public/raw/master/20210509184510.png\" alt=\"\"></p>\n<h5 id=\"多个工厂生产多个产品\"><a href=\"#多个工厂生产多个产品\" class=\"headerlink\" title=\"多个工厂生产多个产品\"></a>多个工厂生产多个产品</h5><p><img src=\"https://gitee.com/hankanon/public/raw/master/20210509184733.png\" alt=\"\"><br>抽象不依赖具体，依赖抽象，<br><img src=\"https://gitee.com/hankanon/public/raw/master/20210509185148.png\" alt=\"\"></p>\n<h5 id=\"多个产品方法改造\"><a href=\"#多个产品方法改造\" class=\"headerlink\" title=\"多个产品方法改造\"></a>多个产品方法改造</h5><p>提供基类工厂方法和基类的产品方法，每个产品方法有具体的工厂实现方法<br><img src=\"https://gitee.com/hankanon/public/raw/master/20210509184520.png\" alt=\"\"></p>\n<h2 id=\"JS中的应用\"><a href=\"#JS中的应用\" class=\"headerlink\" title=\"JS中的应用\"></a>JS中的应用</h2><ul>\n<li><p>Jquery</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Jquery</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">constructor</span>(el)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.el = el</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    addclass()&#123;&#125;</span><br><span class=\"line\">    css()&#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">$</span>(<span class=\"params\">el</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Jquery(el)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>React</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">React.createElement(<span class=\"string\">'div'</span>,<span class=\"literal\">null</span>,[ </span><br><span class=\"line\">    React.createElement(<span class=\"string\">'span'</span>, <span class=\"literal\">null</span>, <span class=\"string\">'aaaaa'</span>),</span><br><span class=\"line\">    React.createElement(<span class=\"string\">'img'</span>, &#123;<span class=\"attr\">src</span>: <span class=\"string\">''</span>&#125;)]</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Vue 异步组件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue.component(<span class=\"string\">''</span>,()=&gt;&#123;&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"个人想法\"><a href=\"#个人想法\" class=\"headerlink\" title=\"个人想法\"></a>个人想法</h2><p><strong>工厂生产产品，每一个产品对应一个实现该产品的工厂方法，依据依赖倒置原则，抽象不依赖细节，细节依赖抽象。每个产品的实现都是细节，针对产品提取抽象类，同理产品的工厂方法类似，提取抽象的工厂方法</strong></p>\n<h2 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h2><h5 id=\"JavaScript代码实现\"><a href=\"#JavaScript代码实现\" class=\"headerlink\" title=\"JavaScript代码实现\"></a>JavaScript代码实现</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 产品</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Product</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">constructor</span>(name)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    init()&#123;</span><br><span class=\"line\">        alert(<span class=\"string\">'init'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    fun1()&#123;</span><br><span class=\"line\">        alert(<span class=\"string\">'fun1'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    fun2()&#123;</span><br><span class=\"line\">        alert(<span class=\"string\">'fun2'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 工厂创建产品</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Creator</span> </span>&#123;</span><br><span class=\"line\">    create(name)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Product(name)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> creator = <span class=\"keyword\">new</span> Creator();</span><br><span class=\"line\"><span class=\"keyword\">let</span> p = <span class=\"keyword\">new</span> creator.create(<span class=\"string\">'p1'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">p.init();</span><br><span class=\"line\">p.fun1();</span><br></pre></td></tr></table></figure>\n<h5 id=\"typescript代码实现\"><a href=\"#typescript代码实现\" class=\"headerlink\" title=\"typescript代码实现\"></a>typescript代码实现</h5><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 工厂的抽象基类</span></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">class</span> Creator &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 产品的创建方法，</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> factoryMethod(): Product;   <span class=\"comment\">// 返回类型是 基类的产品类型 </span></span><br><span class=\"line\">    <span class=\"comment\">// 操作</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> someOperation(): <span class=\"built_in\">string</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Call the factory method to create a Product object.</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> product = <span class=\"keyword\">this</span>.factoryMethod();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">`Creator: The same creator's code has just worked with <span class=\"subst\">$&#123;product.operation()&#125;</span>`</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 工厂的具体实现类，每个产品对应具体的创建工厂</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> ConcreteCreator1 <span class=\"keyword\">extends</span> Creator &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> factoryMethod(): Product &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ConcreteProduct1();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> ConcreteCreator2 <span class=\"keyword\">extends</span> Creator &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> factoryMethod(): Product &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ConcreteProduct2();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 产品的基类（接口）</span></span><br><span class=\"line\"><span class=\"keyword\">interface</span> Product &#123;</span><br><span class=\"line\">    operation(): <span class=\"built_in\">string</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 具体的产品</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> ConcreteProduct1 <span class=\"keyword\">implements</span> Product &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> operation(): <span class=\"built_in\">string</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'&#123;Result of the ConcreteProduct1&#125;'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> ConcreteProduct2 <span class=\"keyword\">implements</span> Product &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> operation(): <span class=\"built_in\">string</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'&#123;Result of the ConcreteProduct2&#125;'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 用户操作</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">clientCode</span>(<span class=\"params\">creator: Creator</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Client: I\\'m not aware of the creator\\'s class, but it still works.'</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(creator.someOperation());</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建第一个产品</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'App: Launched with the ConcreteCreator1.'</span>);</span><br><span class=\"line\">clientCode(<span class=\"keyword\">new</span> ConcreteCreator1());</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建第二个产品</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'App: Launched with the ConcreteCreator2.'</span>);</span><br><span class=\"line\">clientCode(<span class=\"keyword\">new</span> ConcreteCreator2());</span><br></pre></td></tr></table></figure>\n<pre><code>优点：\n对象的创建和产品的实现进行隔离\n增加新的产品无需更改现有的产品代码\n缺点：\n每个产品都要有各自对应的工厂方法\n</code></pre><p> 你可以避免创建者和具体产品之间的紧密耦合。<br> 单一职责原则。 你可以将产品创建代码放在程序的单一位置， 从而使得代码更容易维护。<br> 开闭原则。 无需更改现有客户端代码， 你就可以在程序中引入新的产品类型。</p>\n<p> 应用工厂方法模式需要引入许多新的子类， 代码可能会因此变得更复杂。 最好的情况是将该模式引入创建者类的现有层次结构中。</p>\n<p> 参考：<a href=\"https://refactoringguru.cn/design-patterns/factory-method\" target=\"_blank\" rel=\"noopener\">工厂方法模式</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>工厂方法模式属于创建行模式，对new() 操作符用方法进行封装。</p>\n<h2 id=\"方法演变过程\"><a href=\"#方法演变过程\" class=\"headerlink\" title=\"方法演变过程\"></a>方法演变过程</h2><pre><code>用工厂生产产品进行举例\n</code></pre><h5 id=\"一个工厂生产一种产品\"><a href=\"#一个工厂生产一种产品\" class=\"headerlink\" title=\"一个工厂生产一种产品\"></a>一个工厂生产一种产品</h5><p><img src=\"https://gitee.com/hankanon/public/raw/master/20210509184510.png\" alt=\"\"></p>\n<h5 id=\"多个工厂生产多个产品\"><a href=\"#多个工厂生产多个产品\" class=\"headerlink\" title=\"多个工厂生产多个产品\"></a>多个工厂生产多个产品</h5><p><img src=\"https://gitee.com/hankanon/public/raw/master/20210509184733.png\" alt=\"\"><br>抽象不依赖具体，依赖抽象，<br><img src=\"https://gitee.com/hankanon/public/raw/master/20210509185148.png\" alt=\"\"></p>\n<h5 id=\"多个产品方法改造\"><a href=\"#多个产品方法改造\" class=\"headerlink\" title=\"多个产品方法改造\"></a>多个产品方法改造</h5><p>提供基类工厂方法和基类的产品方法，每个产品方法有具体的工厂实现方法<br><img src=\"https://gitee.com/hankanon/public/raw/master/20210509184520.png\" alt=\"\"></p>\n<h2 id=\"JS中的应用\"><a href=\"#JS中的应用\" class=\"headerlink\" title=\"JS中的应用\"></a>JS中的应用</h2><ul>\n<li><p>Jquery</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Jquery</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">constructor</span>(el)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.el = el</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    addclass()&#123;&#125;</span><br><span class=\"line\">    css()&#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">$</span>(<span class=\"params\">el</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Jquery(el)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>React</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">React.createElement(<span class=\"string\">'div'</span>,<span class=\"literal\">null</span>,[ </span><br><span class=\"line\">    React.createElement(<span class=\"string\">'span'</span>, <span class=\"literal\">null</span>, <span class=\"string\">'aaaaa'</span>),</span><br><span class=\"line\">    React.createElement(<span class=\"string\">'img'</span>, &#123;<span class=\"attr\">src</span>: <span class=\"string\">''</span>&#125;)]</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Vue 异步组件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue.component(<span class=\"string\">''</span>,()=&gt;&#123;&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"个人想法\"><a href=\"#个人想法\" class=\"headerlink\" title=\"个人想法\"></a>个人想法</h2><p><strong>工厂生产产品，每一个产品对应一个实现该产品的工厂方法，依据依赖倒置原则，抽象不依赖细节，细节依赖抽象。每个产品的实现都是细节，针对产品提取抽象类，同理产品的工厂方法类似，提取抽象的工厂方法</strong></p>\n<h2 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h2><h5 id=\"JavaScript代码实现\"><a href=\"#JavaScript代码实现\" class=\"headerlink\" title=\"JavaScript代码实现\"></a>JavaScript代码实现</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 产品</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Product</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">constructor</span>(name)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    init()&#123;</span><br><span class=\"line\">        alert(<span class=\"string\">'init'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    fun1()&#123;</span><br><span class=\"line\">        alert(<span class=\"string\">'fun1'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    fun2()&#123;</span><br><span class=\"line\">        alert(<span class=\"string\">'fun2'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 工厂创建产品</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Creator</span> </span>&#123;</span><br><span class=\"line\">    create(name)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Product(name)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> creator = <span class=\"keyword\">new</span> Creator();</span><br><span class=\"line\"><span class=\"keyword\">let</span> p = <span class=\"keyword\">new</span> creator.create(<span class=\"string\">'p1'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">p.init();</span><br><span class=\"line\">p.fun1();</span><br></pre></td></tr></table></figure>\n<h5 id=\"typescript代码实现\"><a href=\"#typescript代码实现\" class=\"headerlink\" title=\"typescript代码实现\"></a>typescript代码实现</h5><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 工厂的抽象基类</span></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">class</span> Creator &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 产品的创建方法，</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> factoryMethod(): Product;   <span class=\"comment\">// 返回类型是 基类的产品类型 </span></span><br><span class=\"line\">    <span class=\"comment\">// 操作</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> someOperation(): <span class=\"built_in\">string</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Call the factory method to create a Product object.</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> product = <span class=\"keyword\">this</span>.factoryMethod();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">`Creator: The same creator's code has just worked with <span class=\"subst\">$&#123;product.operation()&#125;</span>`</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 工厂的具体实现类，每个产品对应具体的创建工厂</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> ConcreteCreator1 <span class=\"keyword\">extends</span> Creator &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> factoryMethod(): Product &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ConcreteProduct1();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> ConcreteCreator2 <span class=\"keyword\">extends</span> Creator &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> factoryMethod(): Product &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> ConcreteProduct2();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 产品的基类（接口）</span></span><br><span class=\"line\"><span class=\"keyword\">interface</span> Product &#123;</span><br><span class=\"line\">    operation(): <span class=\"built_in\">string</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 具体的产品</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> ConcreteProduct1 <span class=\"keyword\">implements</span> Product &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> operation(): <span class=\"built_in\">string</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'&#123;Result of the ConcreteProduct1&#125;'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> ConcreteProduct2 <span class=\"keyword\">implements</span> Product &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> operation(): <span class=\"built_in\">string</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'&#123;Result of the ConcreteProduct2&#125;'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 用户操作</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">clientCode</span>(<span class=\"params\">creator: Creator</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'Client: I\\'m not aware of the creator\\'s class, but it still works.'</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(creator.someOperation());</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建第一个产品</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'App: Launched with the ConcreteCreator1.'</span>);</span><br><span class=\"line\">clientCode(<span class=\"keyword\">new</span> ConcreteCreator1());</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">''</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建第二个产品</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'App: Launched with the ConcreteCreator2.'</span>);</span><br><span class=\"line\">clientCode(<span class=\"keyword\">new</span> ConcreteCreator2());</span><br></pre></td></tr></table></figure>\n<pre><code>优点：\n对象的创建和产品的实现进行隔离\n增加新的产品无需更改现有的产品代码\n缺点：\n每个产品都要有各自对应的工厂方法\n</code></pre><p> 你可以避免创建者和具体产品之间的紧密耦合。<br> 单一职责原则。 你可以将产品创建代码放在程序的单一位置， 从而使得代码更容易维护。<br> 开闭原则。 无需更改现有客户端代码， 你就可以在程序中引入新的产品类型。</p>\n<p> 应用工厂方法模式需要引入许多新的子类， 代码可能会因此变得更复杂。 最好的情况是将该模式引入创建者类的现有层次结构中。</p>\n<p> 参考：<a href=\"https://refactoringguru.cn/design-patterns/factory-method\" target=\"_blank\" rel=\"noopener\">工厂方法模式</a></p>\n"},{"title":"Test","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/test.md","raw":"---\ntitle: Test\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"test","published":1,"date":"2018-01-18T04:13:59.000Z","updated":"2018-01-18T04:13:59.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckoh4vrfq0006e7s60hy9jh9t","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2018-01-16T04:21:30.000Z","updated":"2018-01-16T04:21:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckoh4vrft0007e7s6x1yum4mv","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"开发小技巧","date":"2021-05-09T11:57:11.000Z","_content":"本文记录一些开发调试用的小技巧,日后逐渐记录补充\n\n## Vscode 开发调试小技巧 （调试nodejs）切换不同环境调试，本地debug线上环境\n\n1、启动debug调试功能\n2、修改配置文件如下图所示，\n3、本地和线上环境就可以在本机上随便debug了\n\n## 配置方法如下图所示\n![](https://img-ali.xiaohongchun.com.cn/admin/152596337277724ce7f60.png)\n![](https://img-ali.xiaohongchun.com.cn/admin/1525963372789312273c5.png)\n","source":"_posts/开发小技巧.md","raw":"---\ntitle: 开发小技巧\ndate: 2021-05-09 19:57:11\ntags:\n- NodeJS代码调试\n- vsCode\ncategories: \n- 开发小技巧\n---\n本文记录一些开发调试用的小技巧,日后逐渐记录补充\n\n## Vscode 开发调试小技巧 （调试nodejs）切换不同环境调试，本地debug线上环境\n\n1、启动debug调试功能\n2、修改配置文件如下图所示，\n3、本地和线上环境就可以在本机上随便debug了\n\n## 配置方法如下图所示\n![](https://img-ali.xiaohongchun.com.cn/admin/152596337277724ce7f60.png)\n![](https://img-ali.xiaohongchun.com.cn/admin/1525963372789312273c5.png)\n","slug":"开发小技巧","published":1,"updated":"2021-05-09T12:00:07.156Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckoh4vrfv0008e7s6utncj34w","content":"<p>本文记录一些开发调试用的小技巧,日后逐渐记录补充</p>\n<h2 id=\"Vscode-开发调试小技巧-（调试nodejs）切换不同环境调试，本地debug线上环境\"><a href=\"#Vscode-开发调试小技巧-（调试nodejs）切换不同环境调试，本地debug线上环境\" class=\"headerlink\" title=\"Vscode 开发调试小技巧 （调试nodejs）切换不同环境调试，本地debug线上环境\"></a>Vscode 开发调试小技巧 （调试nodejs）切换不同环境调试，本地debug线上环境</h2><p>1、启动debug调试功能<br>2、修改配置文件如下图所示，<br>3、本地和线上环境就可以在本机上随便debug了</p>\n<h2 id=\"配置方法如下图所示\"><a href=\"#配置方法如下图所示\" class=\"headerlink\" title=\"配置方法如下图所示\"></a>配置方法如下图所示</h2><p><img src=\"https://img-ali.xiaohongchun.com.cn/admin/152596337277724ce7f60.png\" alt=\"\"><br><img src=\"https://img-ali.xiaohongchun.com.cn/admin/1525963372789312273c5.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>本文记录一些开发调试用的小技巧,日后逐渐记录补充</p>\n<h2 id=\"Vscode-开发调试小技巧-（调试nodejs）切换不同环境调试，本地debug线上环境\"><a href=\"#Vscode-开发调试小技巧-（调试nodejs）切换不同环境调试，本地debug线上环境\" class=\"headerlink\" title=\"Vscode 开发调试小技巧 （调试nodejs）切换不同环境调试，本地debug线上环境\"></a>Vscode 开发调试小技巧 （调试nodejs）切换不同环境调试，本地debug线上环境</h2><p>1、启动debug调试功能<br>2、修改配置文件如下图所示，<br>3、本地和线上环境就可以在本机上随便debug了</p>\n<h2 id=\"配置方法如下图所示\"><a href=\"#配置方法如下图所示\" class=\"headerlink\" title=\"配置方法如下图所示\"></a>配置方法如下图所示</h2><p><img src=\"https://img-ali.xiaohongchun.com.cn/admin/152596337277724ce7f60.png\" alt=\"\"><br><img src=\"https://img-ali.xiaohongchun.com.cn/admin/1525963372789312273c5.png\" alt=\"\"></p>\n"},{"layout":"vue3","title":"Vue3响应式原理","date":"2021-05-09T12:03:12.000Z","_content":"## Vue3.0 composition-api的用法\n```html\n<body>\n  <h3>reactive</h3>\n  <div id='app'>\n    <button @click='click'>reverse</button> \n    <div style=\"margin-top: 20px\">{{ state.message }}</div>\n    <div style=\"margin-top: 20px\">{{ state.count }}</div>\n    <div style=\"margin-top: 20px\">{{ state.doubleCount }}</div>\n  </div>\n</body>\n<script>\n  const { createApp, reactive, defineComponent, computed, watchEffect, onMounted } = Vue\n  const App = {\n      setup(props, {attrs, slots, emit}=ctx) {\n          // setup 函数里面不能使用this\n          \n          // 数据响应式处理\n          const state = reactive({\n              message: 'Hello Vue3!!',\n              count: 1,\n              // 计算属性\n              doubleCount: computed(()=>{return state.count * 2})\n          })\n          // 方法\n          click = () => {\n              state.message = state.message.split('').reverse().join('')\n          }\n          // 监听函数\n          watchEffect(()=>{\n            console.log(state.message)\n          })\n          // 生命周期\n          onMounted(()=>{})\n          return {\n              state,\n              click\n          }\n      },\n      // 指令\n      directives: {\n        'focus': (el, { value }) => {\n          if (value) {\n            el.focus()\n          }\n        }\n      }\n  }\n  createApp(App).mount('#app')\n  // Vue2 的 初始化方式\n  new Vue({\n      render: h => h(App)\n    }).$mount('#app')\n</script>\n\n```\n\n### Vue2 版本响应式处理的一些局限性\n\n* 无法监控到数组下标的变化，导致通过数组下标添加元素，不能实时响应\n* 只能劫持对象的属性，从而需要对每个对象，每个属性进行遍历，如果，属性值是对象，还需要深度遍历。\n\n#### Vue3 和 Vue2 响应式方案对比\n| 实现方式 | Vue2 | Vue3  |\n| ---    | --- | --- |\n| 差异  | 劫持的是对象中的属性 | 劫持的是整个对象 |\n| 优势  | 兼容性好，支持IE9+，性能好 | 能够监听整个对象的变化，对数组、对象的属性增加、删除都能监听到，不需要循环遍历监听，初始化阶段性能好  |\n| 不足  | 不能监听对象、数组的增删、删除，不支持，Map，Set等数据结构的响应式 | 不支持IE浏览器 |\n\n## Vue2 和Vue3 运行机制对比\nVue2 运行机制：\n![](https://gitee.com/hankanon/public/raw/master/WX20201221-015918@2x.png)\n图片来自：[掘金小册：剖析 Vue.js 内部运行机制](https://juejin.cn/book/6844733705089449991)\nVue3 运行机制：\n![](https://gitee.com/hankanon/public/raw/master/20201221001406.png)\n\n## Vue3数据响应式原理\n### Proxy 和 Reflect\n\n* Proxy： 可以理解成，在目标对象之前架设一层“拦截”，外界对该对象的访问，都必须先通过这层拦截，因此提供了一种机制，可以对外界的访问进行过滤和改写。Proxy 这个词的原意是代理，用在这里表示由它来“代理”某些操作，可以译为“代理器”\n* Reflect： 是一个内置的对象，它提供拦截 JavaScript 操作的方法。Reflect不是一个函数对象，因此它是不可构造的。不能通过**new运算符**对其进行调用\n\n链接：[【Proxy具体用法】](https://es6.ruanyifeng.com/#docs/proxy)\n链接：[【Reflect具体用法】](https://es6.ruanyifeng.com/#docs/reflect)\n\n### 不同类型的Reactive\n\n#### ① reactive\n建立响应式reactive，返回proxy对象，这个reactive可以深层次递归，也就是如果发现展开的属性值是引用类型的而且被引用，还会用reactive递归处理。而且属性是可以被修改的。\n#### ② shallowReactive\n建立响应式shallowReactive，返回proxy对象。和reactive的区别是只建立一层的响应式，也就是说如果发现展开属性是引用类型也不会递归。\n#### ③ readonly\n返回的proxy处理的对象，可以展开递归处理，但是属性是只读的，不能修改。可以做props传递给子组件使用。\n#### ④ shallowReadonly\n返回经过处理的proxy对象，但是建立响应式属性是只读的，不展开引用也不递归转换，可以这用于为有状态组件创建props代理对象。\n\n### 储存对象与proxy\n\n存储代理对象和原对象之间的映射关系\n```js\n// 键值对 ： { [targetObject] : obseved } \n// 键是原对象， 值是代理对象\nexport const reactiveMap = new WeakMap<Target, any>()\n\n// { [target] : obseved }\n// 键是原对象， 值是代理对象\nexport const readonlyMap = new WeakMap<Target, any>()\n\n```\n\n\n### reactive入口解析\n通过reactive() 函数来观察Vue3数据响应式的实现原理\n```js\nexport function reactive(target: object) {\n  // if trying to observe a readonly proxy, return the readonly version.\n  if (target && (target as Target)[ReactiveFlags.IS_READONLY]) {\n    return target\n  }\n  return createReactiveObject(\n    target,\n    false,\n    mutableHandlers,\n    mutableCollectionHandlers\n  )\n}\n\n\n```\n**其实就是通过createReactiveObject方法来产生一个Proxy，并根据不同的数据类型给了不同的处理方式**\n\n```js\nfunction createReactiveObject(\n  target: Target,\n  isReadonly: boolean,\n  baseHandlers: ProxyHandler<any>,\n  collectionHandlers: ProxyHandler<any>\n) {\n  if (!isObject(target)) {\n    return target\n  }\n  // 如果已经是proxy对象则直接返回，有个例外，如果是readOnly作用于响应式 则继续\n  if (\n    target[ReactiveFlags.RAW] && \n    !(isReadonly && target[ReactiveFlags.IS_REACTIVE]) \n  ) {\n    return target\n  }\n  const proxyMap = isReadonly ? readonlyMap : reactiveMap\n  // 已经有了对应的proxy映射 直接\n  const existingProxy = proxyMap.get(target)\n  if (existingProxy) {\n    return existingProxy\n  }\n  const targetType = getTargetType(target)\n  // 只有在白名单中的数据类型才可以被响应式\n  if (targetType === TargetType.INVALID) {\n    return target\n  }\n  // 通过Proxy API劫持target对象，把它变成响应式\n  const proxy = new Proxy(\n    target,\n    // Map Set WeakMap WeakSet用collectionhandlers代理 Object Array用baseHandlers代理\n    targetType === TargetType.COLLECTION ? collectionHandlers : baseHandlers\n  )\n  // 存储一个原始类型和proxy数据类型的映射 \n  proxyMap.set(target, proxy)\n  return proxy\n}\n```\n\n* 首先判断是否是对象类型，如果不是就直接返回，否则继续\n* 判断如果目标对象已经是proxy了直接返回，否则继续\n* 然后获取当前的目标对象的ProxyMap，如果存在就返回对应的proxy(在函数最后，我们会使用一个WeakMap类型的对象存储原始数据类型和proxy数据类型的映射) 否则继续\n* 判断目标对象是否在可响应式数据类型的白名单中，如果不在直接返回目标对象，否则继续。\n\n**响应式数据白名单只对这6种类型的数据做响应式处理**\n```js\nfunction targetTypeMap(rawType: string) {\n  switch (rawType) {\n    case 'Object':\n    case 'Array':\n      return TargetType.COMMON\n    case 'Map':\n    case 'Set':\n    case 'WeakMap':\n    case 'WeakSet':\n      return TargetType.COLLECTION\n    default:\n      return TargetType.INVALID\n  }\n}\n```\n#### collectionHandlers 和 baseHandlers\n\n* baseHandlers： 处理Object 和 Array 类型\n* collectionHandlers： 处理 Map、Set、WeakMap、WeakSet 类型\n\n#### 普通的响应式对象处理\n```js\n\nconst get = /*#__PURE__*/ createGetter()\nconst set = /*#__PURE__*/ createSetter()\nexport const mutableHandlers: ProxyHandler<object> = {\n  get, // 对数据的读取属性进行拦截 包含target.语法和target[]\n  set, // 对数据的存入属性进行拦截\n  deleteProperty, // delete操作符进行拦截 可以监听到属性的删除操作\n  has, // 对对象的in操作符进行属性拦截\n  ownKeys // 访问对象属性名的时候会触发ownKeys函数\n}\n```\n##### createGetter函数\n```js\nfunction createGetter(isReadonly = false, shallow = false) {\n  return function get(target: Target, key: string | symbol, receiver: object) {\n    // 如果是只读属性 直接return target\n    \n    // 求值 \n    // 如果是数组单独处理\n    const targetIsArray = isArray(target)\n    if (targetIsArray && hasOwn(arrayInstrumentations, key)) {\n      return Reflect.get(arrayInstrumentations, key, receiver)\n    }\n    \n    // 对象\n    const res = Reflect.get(target, key, receiver)\n    \n    if (!isReadonly) {\n      // 依赖收集\n      track(target, TrackOpTypes.GET, key)\n    }\n    // 递归调用响应式\n    if (isObject(res)) {\n      return isReadonly ? readonly(res) : reactive(res)\n    }\n    // 返回结果\n    return res\n  }\n}\n```\n当我们访问对象的属性的时候会触发get函数，这个函数中的主要步骤有三个，首先会使用Reflect.get进行求值, 然后判断是否是只读的，如果不是就调用track进行依赖收集，然后对求值的结果进行判断，如果是对象则递归调用reactive或者readonly对结果继续进行响应式处理,最后将获取的结果返回。\n\n注意：这里和Vue2响应式处理的方式有所不同，这也是Vue3响应式在初始化的时候性能优化的一个点。\n\n* Vue2在实现响应式的时候会在初始化阶段判断对象的属性是否是Object类型,如果是的话就会递归的调用Observer将子对象也变成响应式。\n* Vue3的实现流程则是在初始化阶段的时候只对第一层的属性进行响应式，当返回proxy的属性被访且是对象的话再进行递归响应式，Proxy劫持的是对象本身，并不能劫持子对象的变化，正是利用这种特性可以延时定义子对象响应式的实现，在初始化的时候性能也会得到提升。\n\n##### createSetter函数\n```js\nfunction createSetter(shallow = false) {\n  return function set(\n    target: object,\n    key: string | symbol,\n    value: unknown,\n    receiver: object\n  ): boolean {\n    // 1.先获取oldValue\n    const oldValue = (target as any)[key]\n    // 2.设置新值\n    const result = Reflect.set(target, key, value, receiver)\n    // don't trigger if target is something up in the prototype chain of original\n    // 派发更新\n    if (target === toRaw(receiver)) {\n      if (!hadKey) {\n        trigger(target, TriggerOpTypes.ADD, key, value)\n      } else if (hasChanged(value, oldValue)) {\n        trigger(target, TriggerOpTypes.SET, key, value, oldValue)\n      }\n    }\n    return result\n  }\n}\n```\n\n当我们更新响应式对象的属性的时候会触发set函数,set函数内部的主要步骤也是三个，首先获取这个属性的oldValue，然后通过Reflect.set对属性进行赋值操作,最后调用trigger进行派发更新，在派发更新阶段如果是新增属性则trigger的type是add,如果value!==oldValue则trigger的type是set。\n\n#### track - 依赖收集\n#### trigger - 派发更新\n\n\n## 完整的响应式图\n\n![](https://gitee.com/hankanon/public/raw/master/20201220225052.png)\n链接：[图片来自掘金：深入学习vue3.0核心实现原理](https://juejin.cn/post/6874754047891472391)\n\n**问题：Vue2 中可以this访问到定义在data、methods中的变量或方法，是通过 defineProperty 进行数据上下文代理，让我们可以直接通过 this 进行访问，并在更改值后触发 get、set。\nVue3 是怎么实现的？**\n\n\n\n\n\n","source":"_posts/响应式原理.md","raw":"---\nlayout: vue3\ntitle: Vue3响应式原理\ndate: 2021-05-09 20:03:12\ntags:\n- Vue3 原理\ncategories: \n- Vue3\n---\n## Vue3.0 composition-api的用法\n```html\n<body>\n  <h3>reactive</h3>\n  <div id='app'>\n    <button @click='click'>reverse</button> \n    <div style=\"margin-top: 20px\">{{ state.message }}</div>\n    <div style=\"margin-top: 20px\">{{ state.count }}</div>\n    <div style=\"margin-top: 20px\">{{ state.doubleCount }}</div>\n  </div>\n</body>\n<script>\n  const { createApp, reactive, defineComponent, computed, watchEffect, onMounted } = Vue\n  const App = {\n      setup(props, {attrs, slots, emit}=ctx) {\n          // setup 函数里面不能使用this\n          \n          // 数据响应式处理\n          const state = reactive({\n              message: 'Hello Vue3!!',\n              count: 1,\n              // 计算属性\n              doubleCount: computed(()=>{return state.count * 2})\n          })\n          // 方法\n          click = () => {\n              state.message = state.message.split('').reverse().join('')\n          }\n          // 监听函数\n          watchEffect(()=>{\n            console.log(state.message)\n          })\n          // 生命周期\n          onMounted(()=>{})\n          return {\n              state,\n              click\n          }\n      },\n      // 指令\n      directives: {\n        'focus': (el, { value }) => {\n          if (value) {\n            el.focus()\n          }\n        }\n      }\n  }\n  createApp(App).mount('#app')\n  // Vue2 的 初始化方式\n  new Vue({\n      render: h => h(App)\n    }).$mount('#app')\n</script>\n\n```\n\n### Vue2 版本响应式处理的一些局限性\n\n* 无法监控到数组下标的变化，导致通过数组下标添加元素，不能实时响应\n* 只能劫持对象的属性，从而需要对每个对象，每个属性进行遍历，如果，属性值是对象，还需要深度遍历。\n\n#### Vue3 和 Vue2 响应式方案对比\n| 实现方式 | Vue2 | Vue3  |\n| ---    | --- | --- |\n| 差异  | 劫持的是对象中的属性 | 劫持的是整个对象 |\n| 优势  | 兼容性好，支持IE9+，性能好 | 能够监听整个对象的变化，对数组、对象的属性增加、删除都能监听到，不需要循环遍历监听，初始化阶段性能好  |\n| 不足  | 不能监听对象、数组的增删、删除，不支持，Map，Set等数据结构的响应式 | 不支持IE浏览器 |\n\n## Vue2 和Vue3 运行机制对比\nVue2 运行机制：\n![](https://gitee.com/hankanon/public/raw/master/WX20201221-015918@2x.png)\n图片来自：[掘金小册：剖析 Vue.js 内部运行机制](https://juejin.cn/book/6844733705089449991)\nVue3 运行机制：\n![](https://gitee.com/hankanon/public/raw/master/20201221001406.png)\n\n## Vue3数据响应式原理\n### Proxy 和 Reflect\n\n* Proxy： 可以理解成，在目标对象之前架设一层“拦截”，外界对该对象的访问，都必须先通过这层拦截，因此提供了一种机制，可以对外界的访问进行过滤和改写。Proxy 这个词的原意是代理，用在这里表示由它来“代理”某些操作，可以译为“代理器”\n* Reflect： 是一个内置的对象，它提供拦截 JavaScript 操作的方法。Reflect不是一个函数对象，因此它是不可构造的。不能通过**new运算符**对其进行调用\n\n链接：[【Proxy具体用法】](https://es6.ruanyifeng.com/#docs/proxy)\n链接：[【Reflect具体用法】](https://es6.ruanyifeng.com/#docs/reflect)\n\n### 不同类型的Reactive\n\n#### ① reactive\n建立响应式reactive，返回proxy对象，这个reactive可以深层次递归，也就是如果发现展开的属性值是引用类型的而且被引用，还会用reactive递归处理。而且属性是可以被修改的。\n#### ② shallowReactive\n建立响应式shallowReactive，返回proxy对象。和reactive的区别是只建立一层的响应式，也就是说如果发现展开属性是引用类型也不会递归。\n#### ③ readonly\n返回的proxy处理的对象，可以展开递归处理，但是属性是只读的，不能修改。可以做props传递给子组件使用。\n#### ④ shallowReadonly\n返回经过处理的proxy对象，但是建立响应式属性是只读的，不展开引用也不递归转换，可以这用于为有状态组件创建props代理对象。\n\n### 储存对象与proxy\n\n存储代理对象和原对象之间的映射关系\n```js\n// 键值对 ： { [targetObject] : obseved } \n// 键是原对象， 值是代理对象\nexport const reactiveMap = new WeakMap<Target, any>()\n\n// { [target] : obseved }\n// 键是原对象， 值是代理对象\nexport const readonlyMap = new WeakMap<Target, any>()\n\n```\n\n\n### reactive入口解析\n通过reactive() 函数来观察Vue3数据响应式的实现原理\n```js\nexport function reactive(target: object) {\n  // if trying to observe a readonly proxy, return the readonly version.\n  if (target && (target as Target)[ReactiveFlags.IS_READONLY]) {\n    return target\n  }\n  return createReactiveObject(\n    target,\n    false,\n    mutableHandlers,\n    mutableCollectionHandlers\n  )\n}\n\n\n```\n**其实就是通过createReactiveObject方法来产生一个Proxy，并根据不同的数据类型给了不同的处理方式**\n\n```js\nfunction createReactiveObject(\n  target: Target,\n  isReadonly: boolean,\n  baseHandlers: ProxyHandler<any>,\n  collectionHandlers: ProxyHandler<any>\n) {\n  if (!isObject(target)) {\n    return target\n  }\n  // 如果已经是proxy对象则直接返回，有个例外，如果是readOnly作用于响应式 则继续\n  if (\n    target[ReactiveFlags.RAW] && \n    !(isReadonly && target[ReactiveFlags.IS_REACTIVE]) \n  ) {\n    return target\n  }\n  const proxyMap = isReadonly ? readonlyMap : reactiveMap\n  // 已经有了对应的proxy映射 直接\n  const existingProxy = proxyMap.get(target)\n  if (existingProxy) {\n    return existingProxy\n  }\n  const targetType = getTargetType(target)\n  // 只有在白名单中的数据类型才可以被响应式\n  if (targetType === TargetType.INVALID) {\n    return target\n  }\n  // 通过Proxy API劫持target对象，把它变成响应式\n  const proxy = new Proxy(\n    target,\n    // Map Set WeakMap WeakSet用collectionhandlers代理 Object Array用baseHandlers代理\n    targetType === TargetType.COLLECTION ? collectionHandlers : baseHandlers\n  )\n  // 存储一个原始类型和proxy数据类型的映射 \n  proxyMap.set(target, proxy)\n  return proxy\n}\n```\n\n* 首先判断是否是对象类型，如果不是就直接返回，否则继续\n* 判断如果目标对象已经是proxy了直接返回，否则继续\n* 然后获取当前的目标对象的ProxyMap，如果存在就返回对应的proxy(在函数最后，我们会使用一个WeakMap类型的对象存储原始数据类型和proxy数据类型的映射) 否则继续\n* 判断目标对象是否在可响应式数据类型的白名单中，如果不在直接返回目标对象，否则继续。\n\n**响应式数据白名单只对这6种类型的数据做响应式处理**\n```js\nfunction targetTypeMap(rawType: string) {\n  switch (rawType) {\n    case 'Object':\n    case 'Array':\n      return TargetType.COMMON\n    case 'Map':\n    case 'Set':\n    case 'WeakMap':\n    case 'WeakSet':\n      return TargetType.COLLECTION\n    default:\n      return TargetType.INVALID\n  }\n}\n```\n#### collectionHandlers 和 baseHandlers\n\n* baseHandlers： 处理Object 和 Array 类型\n* collectionHandlers： 处理 Map、Set、WeakMap、WeakSet 类型\n\n#### 普通的响应式对象处理\n```js\n\nconst get = /*#__PURE__*/ createGetter()\nconst set = /*#__PURE__*/ createSetter()\nexport const mutableHandlers: ProxyHandler<object> = {\n  get, // 对数据的读取属性进行拦截 包含target.语法和target[]\n  set, // 对数据的存入属性进行拦截\n  deleteProperty, // delete操作符进行拦截 可以监听到属性的删除操作\n  has, // 对对象的in操作符进行属性拦截\n  ownKeys // 访问对象属性名的时候会触发ownKeys函数\n}\n```\n##### createGetter函数\n```js\nfunction createGetter(isReadonly = false, shallow = false) {\n  return function get(target: Target, key: string | symbol, receiver: object) {\n    // 如果是只读属性 直接return target\n    \n    // 求值 \n    // 如果是数组单独处理\n    const targetIsArray = isArray(target)\n    if (targetIsArray && hasOwn(arrayInstrumentations, key)) {\n      return Reflect.get(arrayInstrumentations, key, receiver)\n    }\n    \n    // 对象\n    const res = Reflect.get(target, key, receiver)\n    \n    if (!isReadonly) {\n      // 依赖收集\n      track(target, TrackOpTypes.GET, key)\n    }\n    // 递归调用响应式\n    if (isObject(res)) {\n      return isReadonly ? readonly(res) : reactive(res)\n    }\n    // 返回结果\n    return res\n  }\n}\n```\n当我们访问对象的属性的时候会触发get函数，这个函数中的主要步骤有三个，首先会使用Reflect.get进行求值, 然后判断是否是只读的，如果不是就调用track进行依赖收集，然后对求值的结果进行判断，如果是对象则递归调用reactive或者readonly对结果继续进行响应式处理,最后将获取的结果返回。\n\n注意：这里和Vue2响应式处理的方式有所不同，这也是Vue3响应式在初始化的时候性能优化的一个点。\n\n* Vue2在实现响应式的时候会在初始化阶段判断对象的属性是否是Object类型,如果是的话就会递归的调用Observer将子对象也变成响应式。\n* Vue3的实现流程则是在初始化阶段的时候只对第一层的属性进行响应式，当返回proxy的属性被访且是对象的话再进行递归响应式，Proxy劫持的是对象本身，并不能劫持子对象的变化，正是利用这种特性可以延时定义子对象响应式的实现，在初始化的时候性能也会得到提升。\n\n##### createSetter函数\n```js\nfunction createSetter(shallow = false) {\n  return function set(\n    target: object,\n    key: string | symbol,\n    value: unknown,\n    receiver: object\n  ): boolean {\n    // 1.先获取oldValue\n    const oldValue = (target as any)[key]\n    // 2.设置新值\n    const result = Reflect.set(target, key, value, receiver)\n    // don't trigger if target is something up in the prototype chain of original\n    // 派发更新\n    if (target === toRaw(receiver)) {\n      if (!hadKey) {\n        trigger(target, TriggerOpTypes.ADD, key, value)\n      } else if (hasChanged(value, oldValue)) {\n        trigger(target, TriggerOpTypes.SET, key, value, oldValue)\n      }\n    }\n    return result\n  }\n}\n```\n\n当我们更新响应式对象的属性的时候会触发set函数,set函数内部的主要步骤也是三个，首先获取这个属性的oldValue，然后通过Reflect.set对属性进行赋值操作,最后调用trigger进行派发更新，在派发更新阶段如果是新增属性则trigger的type是add,如果value!==oldValue则trigger的type是set。\n\n#### track - 依赖收集\n#### trigger - 派发更新\n\n\n## 完整的响应式图\n\n![](https://gitee.com/hankanon/public/raw/master/20201220225052.png)\n链接：[图片来自掘金：深入学习vue3.0核心实现原理](https://juejin.cn/post/6874754047891472391)\n\n**问题：Vue2 中可以this访问到定义在data、methods中的变量或方法，是通过 defineProperty 进行数据上下文代理，让我们可以直接通过 this 进行访问，并在更改值后触发 get、set。\nVue3 是怎么实现的？**\n\n\n\n\n\n","slug":"响应式原理","published":1,"updated":"2021-05-09T12:04:04.206Z","comments":1,"photos":[],"link":"","_id":"ckoh4vrhe000pe7s6psg41mhy","content":"<h2 id=\"Vue3-0-composition-api的用法\"><a href=\"#Vue3-0-composition-api的用法\" class=\"headerlink\" title=\"Vue3.0 composition-api的用法\"></a>Vue3.0 composition-api的用法</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>reactive<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">'app'</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">'click'</span>&gt;</span>reverse<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"margin-top: 20px\"</span>&gt;</span>&#123;&#123; state.message &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"margin-top: 20px\"</span>&gt;</span>&#123;&#123; state.count &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"margin-top: 20px\"</span>&gt;</span>&#123;&#123; state.doubleCount &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"keyword\">const</span> &#123; createApp, reactive, defineComponent, computed, watchEffect, onMounted &#125; = Vue</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"keyword\">const</span> App = &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">      setup(props, &#123;attrs, slots, emit&#125;=ctx) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"comment\">// setup 函数里面不能使用this</span></span></span><br><span class=\"line\"><span class=\"undefined\">          </span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"comment\">// 数据响应式处理</span></span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"keyword\">const</span> state = reactive(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">              message: <span class=\"string\">'Hello Vue3!!'</span>,</span></span><br><span class=\"line\"><span class=\"undefined\">              count: 1,</span></span><br><span class=\"line\"><span class=\"javascript\">              <span class=\"comment\">// 计算属性</span></span></span><br><span class=\"line\"><span class=\"javascript\">              doubleCount: computed(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span>&#123;<span class=\"keyword\">return</span> state.count * <span class=\"number\">2</span>&#125;)</span></span><br><span class=\"line\"><span class=\"undefined\">          &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"comment\">// 方法</span></span></span><br><span class=\"line\"><span class=\"javascript\">          click = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">              state.message = state.message.split(<span class=\"string\">''</span>).reverse().join(<span class=\"string\">''</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">          &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"comment\">// 监听函数</span></span></span><br><span class=\"line\"><span class=\"javascript\">          watchEffect(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(state.message)</span></span><br><span class=\"line\"><span class=\"undefined\">          &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"comment\">// 生命周期</span></span></span><br><span class=\"line\"><span class=\"javascript\">          onMounted(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span>&#123;&#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">              state,</span></span><br><span class=\"line\"><span class=\"undefined\">              click</span></span><br><span class=\"line\"><span class=\"undefined\">          &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// 指令</span></span></span><br><span class=\"line\"><span class=\"undefined\">      directives: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"string\">'focus'</span>: <span class=\"function\">(<span class=\"params\">el, &#123; value &#125;</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"keyword\">if</span> (value) &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            el.focus()</span></span><br><span class=\"line\"><span class=\"undefined\">          &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">  createApp(App).mount(<span class=\"string\">'#app'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"comment\">// Vue2 的 初始化方式</span></span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      render: <span class=\"function\"><span class=\"params\">h</span> =&gt;</span> h(App)</span></span><br><span class=\"line\"><span class=\"javascript\">    &#125;).$mount(<span class=\"string\">'#app'</span>)</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Vue2-版本响应式处理的一些局限性\"><a href=\"#Vue2-版本响应式处理的一些局限性\" class=\"headerlink\" title=\"Vue2 版本响应式处理的一些局限性\"></a>Vue2 版本响应式处理的一些局限性</h3><ul>\n<li>无法监控到数组下标的变化，导致通过数组下标添加元素，不能实时响应</li>\n<li>只能劫持对象的属性，从而需要对每个对象，每个属性进行遍历，如果，属性值是对象，还需要深度遍历。</li>\n</ul>\n<h4 id=\"Vue3-和-Vue2-响应式方案对比\"><a href=\"#Vue3-和-Vue2-响应式方案对比\" class=\"headerlink\" title=\"Vue3 和 Vue2 响应式方案对比\"></a>Vue3 和 Vue2 响应式方案对比</h4><table>\n<thead>\n<tr>\n<th>实现方式</th>\n<th>Vue2</th>\n<th>Vue3</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>差异</td>\n<td>劫持的是对象中的属性</td>\n<td>劫持的是整个对象</td>\n</tr>\n<tr>\n<td>优势</td>\n<td>兼容性好，支持IE9+，性能好</td>\n<td>能够监听整个对象的变化，对数组、对象的属性增加、删除都能监听到，不需要循环遍历监听，初始化阶段性能好</td>\n</tr>\n<tr>\n<td>不足</td>\n<td>不能监听对象、数组的增删、删除，不支持，Map，Set等数据结构的响应式</td>\n<td>不支持IE浏览器</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Vue2-和Vue3-运行机制对比\"><a href=\"#Vue2-和Vue3-运行机制对比\" class=\"headerlink\" title=\"Vue2 和Vue3 运行机制对比\"></a>Vue2 和Vue3 运行机制对比</h2><p>Vue2 运行机制：<br><img src=\"https://gitee.com/hankanon/public/raw/master/WX20201221-015918@2x.png\" alt=\"\"><br>图片来自：<a href=\"https://juejin.cn/book/6844733705089449991\" target=\"_blank\" rel=\"noopener\">掘金小册：剖析 Vue.js 内部运行机制</a><br>Vue3 运行机制：<br><img src=\"https://gitee.com/hankanon/public/raw/master/20201221001406.png\" alt=\"\"></p>\n<h2 id=\"Vue3数据响应式原理\"><a href=\"#Vue3数据响应式原理\" class=\"headerlink\" title=\"Vue3数据响应式原理\"></a>Vue3数据响应式原理</h2><h3 id=\"Proxy-和-Reflect\"><a href=\"#Proxy-和-Reflect\" class=\"headerlink\" title=\"Proxy 和 Reflect\"></a>Proxy 和 Reflect</h3><ul>\n<li>Proxy： 可以理解成，在目标对象之前架设一层“拦截”，外界对该对象的访问，都必须先通过这层拦截，因此提供了一种机制，可以对外界的访问进行过滤和改写。Proxy 这个词的原意是代理，用在这里表示由它来“代理”某些操作，可以译为“代理器”</li>\n<li>Reflect： 是一个内置的对象，它提供拦截 JavaScript 操作的方法。Reflect不是一个函数对象，因此它是不可构造的。不能通过<strong>new运算符</strong>对其进行调用</li>\n</ul>\n<p>链接：<a href=\"https://es6.ruanyifeng.com/#docs/proxy\" target=\"_blank\" rel=\"noopener\">【Proxy具体用法】</a><br>链接：<a href=\"https://es6.ruanyifeng.com/#docs/reflect\" target=\"_blank\" rel=\"noopener\">【Reflect具体用法】</a></p>\n<h3 id=\"不同类型的Reactive\"><a href=\"#不同类型的Reactive\" class=\"headerlink\" title=\"不同类型的Reactive\"></a>不同类型的Reactive</h3><h4 id=\"①-reactive\"><a href=\"#①-reactive\" class=\"headerlink\" title=\"① reactive\"></a>① reactive</h4><p>建立响应式reactive，返回proxy对象，这个reactive可以深层次递归，也就是如果发现展开的属性值是引用类型的而且被引用，还会用reactive递归处理。而且属性是可以被修改的。</p>\n<h4 id=\"②-shallowReactive\"><a href=\"#②-shallowReactive\" class=\"headerlink\" title=\"② shallowReactive\"></a>② shallowReactive</h4><p>建立响应式shallowReactive，返回proxy对象。和reactive的区别是只建立一层的响应式，也就是说如果发现展开属性是引用类型也不会递归。</p>\n<h4 id=\"③-readonly\"><a href=\"#③-readonly\" class=\"headerlink\" title=\"③ readonly\"></a>③ readonly</h4><p>返回的proxy处理的对象，可以展开递归处理，但是属性是只读的，不能修改。可以做props传递给子组件使用。</p>\n<h4 id=\"④-shallowReadonly\"><a href=\"#④-shallowReadonly\" class=\"headerlink\" title=\"④ shallowReadonly\"></a>④ shallowReadonly</h4><p>返回经过处理的proxy对象，但是建立响应式属性是只读的，不展开引用也不递归转换，可以这用于为有状态组件创建props代理对象。</p>\n<h3 id=\"储存对象与proxy\"><a href=\"#储存对象与proxy\" class=\"headerlink\" title=\"储存对象与proxy\"></a>储存对象与proxy</h3><p>存储代理对象和原对象之间的映射关系<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 键值对 ： &#123; [targetObject] : obseved &#125; </span></span><br><span class=\"line\"><span class=\"comment\">// 键是原对象， 值是代理对象</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> reactiveMap = <span class=\"keyword\">new</span> <span class=\"built_in\">WeakMap</span>&lt;Target, any&gt;()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// &#123; [target] : obseved &#125;</span></span><br><span class=\"line\"><span class=\"comment\">// 键是原对象， 值是代理对象</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> readonlyMap = <span class=\"keyword\">new</span> <span class=\"built_in\">WeakMap</span>&lt;Target, any&gt;()</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"reactive入口解析\"><a href=\"#reactive入口解析\" class=\"headerlink\" title=\"reactive入口解析\"></a>reactive入口解析</h3><p>通过reactive() 函数来观察Vue3数据响应式的实现原理<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">reactive</span>(<span class=\"params\">target: object</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// if trying to observe a readonly proxy, return the readonly version.</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (target &amp;&amp; (target <span class=\"keyword\">as</span> Target)[ReactiveFlags.IS_READONLY]) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> target</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> createReactiveObject(</span><br><span class=\"line\">    target,</span><br><span class=\"line\">    <span class=\"literal\">false</span>,</span><br><span class=\"line\">    mutableHandlers,</span><br><span class=\"line\">    mutableCollectionHandlers</span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>其实就是通过createReactiveObject方法来产生一个Proxy，并根据不同的数据类型给了不同的处理方式</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createReactiveObject</span>(<span class=\"params\"></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">  target: Target,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">  isReadonly: boolean,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">  baseHandlers: ProxyHandler&lt;any&gt;,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">  collectionHandlers: ProxyHandler&lt;any&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!isObject(target)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> target</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 如果已经是proxy对象则直接返回，有个例外，如果是readOnly作用于响应式 则继续</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (</span><br><span class=\"line\">    target[ReactiveFlags.RAW] &amp;&amp; </span><br><span class=\"line\">    !(isReadonly &amp;&amp; target[ReactiveFlags.IS_REACTIVE]) </span><br><span class=\"line\">  ) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> target</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> proxyMap = isReadonly ? readonlyMap : reactiveMap</span><br><span class=\"line\">  <span class=\"comment\">// 已经有了对应的proxy映射 直接</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> existingProxy = proxyMap.get(target)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (existingProxy) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> existingProxy</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> targetType = getTargetType(target)</span><br><span class=\"line\">  <span class=\"comment\">// 只有在白名单中的数据类型才可以被响应式</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (targetType === TargetType.INVALID) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> target</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 通过Proxy API劫持target对象，把它变成响应式</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> proxy = <span class=\"keyword\">new</span> <span class=\"built_in\">Proxy</span>(</span><br><span class=\"line\">    target,</span><br><span class=\"line\">    <span class=\"comment\">// Map Set WeakMap WeakSet用collectionhandlers代理 Object Array用baseHandlers代理</span></span><br><span class=\"line\">    targetType === TargetType.COLLECTION ? collectionHandlers : baseHandlers</span><br><span class=\"line\">  )</span><br><span class=\"line\">  <span class=\"comment\">// 存储一个原始类型和proxy数据类型的映射 </span></span><br><span class=\"line\">  proxyMap.set(target, proxy)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> proxy</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>首先判断是否是对象类型，如果不是就直接返回，否则继续</li>\n<li>判断如果目标对象已经是proxy了直接返回，否则继续</li>\n<li>然后获取当前的目标对象的ProxyMap，如果存在就返回对应的proxy(在函数最后，我们会使用一个WeakMap类型的对象存储原始数据类型和proxy数据类型的映射) 否则继续</li>\n<li>判断目标对象是否在可响应式数据类型的白名单中，如果不在直接返回目标对象，否则继续。</li>\n</ul>\n<p><strong>响应式数据白名单只对这6种类型的数据做响应式处理</strong><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">targetTypeMap</span>(<span class=\"params\">rawType: string</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (rawType) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'Object'</span>:</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'Array'</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> TargetType.COMMON</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'Map'</span>:</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'Set'</span>:</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'WeakMap'</span>:</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'WeakSet'</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> TargetType.COLLECTION</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> TargetType.INVALID</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"collectionHandlers-和-baseHandlers\"><a href=\"#collectionHandlers-和-baseHandlers\" class=\"headerlink\" title=\"collectionHandlers 和 baseHandlers\"></a>collectionHandlers 和 baseHandlers</h4><ul>\n<li>baseHandlers： 处理Object 和 Array 类型</li>\n<li>collectionHandlers： 处理 Map、Set、WeakMap、WeakSet 类型</li>\n</ul>\n<h4 id=\"普通的响应式对象处理\"><a href=\"#普通的响应式对象处理\" class=\"headerlink\" title=\"普通的响应式对象处理\"></a>普通的响应式对象处理</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> get = <span class=\"comment\">/*#__PURE__*/</span> createGetter()</span><br><span class=\"line\"><span class=\"keyword\">const</span> set = <span class=\"comment\">/*#__PURE__*/</span> createSetter()</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> mutableHandlers: ProxyHandler&lt;object&gt; = &#123;</span><br><span class=\"line\">  get, <span class=\"comment\">// 对数据的读取属性进行拦截 包含target.语法和target[]</span></span><br><span class=\"line\">  set, <span class=\"comment\">// 对数据的存入属性进行拦截</span></span><br><span class=\"line\">  deleteProperty, <span class=\"comment\">// delete操作符进行拦截 可以监听到属性的删除操作</span></span><br><span class=\"line\">  has, <span class=\"comment\">// 对对象的in操作符进行属性拦截</span></span><br><span class=\"line\">  ownKeys <span class=\"comment\">// 访问对象属性名的时候会触发ownKeys函数</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"createGetter函数\"><a href=\"#createGetter函数\" class=\"headerlink\" title=\"createGetter函数\"></a>createGetter函数</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createGetter</span>(<span class=\"params\">isReadonly = false, shallow = false</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get</span>(<span class=\"params\">target: Target, key: string | symbol, receiver: object</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 如果是只读属性 直接return target</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 求值 </span></span><br><span class=\"line\">    <span class=\"comment\">// 如果是数组单独处理</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> targetIsArray = isArray(target)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (targetIsArray &amp;&amp; hasOwn(arrayInstrumentations, key)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"built_in\">Reflect</span>.get(arrayInstrumentations, key, receiver)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 对象</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> res = <span class=\"built_in\">Reflect</span>.get(target, key, receiver)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!isReadonly) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 依赖收集</span></span><br><span class=\"line\">      track(target, TrackOpTypes.GET, key)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 递归调用响应式</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (isObject(res)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> isReadonly ? readonly(res) : reactive(res)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 返回结果</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>当我们访问对象的属性的时候会触发get函数，这个函数中的主要步骤有三个，首先会使用Reflect.get进行求值, 然后判断是否是只读的，如果不是就调用track进行依赖收集，然后对求值的结果进行判断，如果是对象则递归调用reactive或者readonly对结果继续进行响应式处理,最后将获取的结果返回。</p>\n<p>注意：这里和Vue2响应式处理的方式有所不同，这也是Vue3响应式在初始化的时候性能优化的一个点。</p>\n<ul>\n<li>Vue2在实现响应式的时候会在初始化阶段判断对象的属性是否是Object类型,如果是的话就会递归的调用Observer将子对象也变成响应式。</li>\n<li>Vue3的实现流程则是在初始化阶段的时候只对第一层的属性进行响应式，当返回proxy的属性被访且是对象的话再进行递归响应式，Proxy劫持的是对象本身，并不能劫持子对象的变化，正是利用这种特性可以延时定义子对象响应式的实现，在初始化的时候性能也会得到提升。</li>\n</ul>\n<h5 id=\"createSetter函数\"><a href=\"#createSetter函数\" class=\"headerlink\" title=\"createSetter函数\"></a>createSetter函数</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createSetter</span>(<span class=\"params\">shallow = false</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">set</span>(<span class=\"params\"></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    target: object,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    key: string | symbol,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    value: unknown,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    receiver: object</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">  </span>): <span class=\"title\">boolean</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 1.先获取oldValue</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> oldValue = (target <span class=\"keyword\">as</span> any)[key]</span><br><span class=\"line\">    <span class=\"comment\">// 2.设置新值</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> result = <span class=\"built_in\">Reflect</span>.set(target, key, value, receiver)</span><br><span class=\"line\">    <span class=\"comment\">// don't trigger if target is something up in the prototype chain of original</span></span><br><span class=\"line\">    <span class=\"comment\">// 派发更新</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (target === toRaw(receiver)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!hadKey) &#123;</span><br><span class=\"line\">        trigger(target, TriggerOpTypes.ADD, key, value)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (hasChanged(value, oldValue)) &#123;</span><br><span class=\"line\">        trigger(target, TriggerOpTypes.SET, key, value, oldValue)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>当我们更新响应式对象的属性的时候会触发set函数,set函数内部的主要步骤也是三个，首先获取这个属性的oldValue，然后通过Reflect.set对属性进行赋值操作,最后调用trigger进行派发更新，在派发更新阶段如果是新增属性则trigger的type是add,如果value!==oldValue则trigger的type是set。</p>\n<h4 id=\"track-依赖收集\"><a href=\"#track-依赖收集\" class=\"headerlink\" title=\"track - 依赖收集\"></a>track - 依赖收集</h4><h4 id=\"trigger-派发更新\"><a href=\"#trigger-派发更新\" class=\"headerlink\" title=\"trigger - 派发更新\"></a>trigger - 派发更新</h4><h2 id=\"完整的响应式图\"><a href=\"#完整的响应式图\" class=\"headerlink\" title=\"完整的响应式图\"></a>完整的响应式图</h2><p><img src=\"https://gitee.com/hankanon/public/raw/master/20201220225052.png\" alt=\"\"><br>链接：<a href=\"https://juejin.cn/post/6874754047891472391\" target=\"_blank\" rel=\"noopener\">图片来自掘金：深入学习vue3.0核心实现原理</a></p>\n<p><strong>问题：Vue2 中可以this访问到定义在data、methods中的变量或方法，是通过 defineProperty 进行数据上下文代理，让我们可以直接通过 this 进行访问，并在更改值后触发 get、set。<br>Vue3 是怎么实现的？</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Vue3-0-composition-api的用法\"><a href=\"#Vue3-0-composition-api的用法\" class=\"headerlink\" title=\"Vue3.0 composition-api的用法\"></a>Vue3.0 composition-api的用法</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>reactive<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">'app'</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">'click'</span>&gt;</span>reverse<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"margin-top: 20px\"</span>&gt;</span>&#123;&#123; state.message &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"margin-top: 20px\"</span>&gt;</span>&#123;&#123; state.count &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"margin-top: 20px\"</span>&gt;</span>&#123;&#123; state.doubleCount &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"keyword\">const</span> &#123; createApp, reactive, defineComponent, computed, watchEffect, onMounted &#125; = Vue</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"keyword\">const</span> App = &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">      setup(props, &#123;attrs, slots, emit&#125;=ctx) &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"comment\">// setup 函数里面不能使用this</span></span></span><br><span class=\"line\"><span class=\"undefined\">          </span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"comment\">// 数据响应式处理</span></span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"keyword\">const</span> state = reactive(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">              message: <span class=\"string\">'Hello Vue3!!'</span>,</span></span><br><span class=\"line\"><span class=\"undefined\">              count: 1,</span></span><br><span class=\"line\"><span class=\"javascript\">              <span class=\"comment\">// 计算属性</span></span></span><br><span class=\"line\"><span class=\"javascript\">              doubleCount: computed(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span>&#123;<span class=\"keyword\">return</span> state.count * <span class=\"number\">2</span>&#125;)</span></span><br><span class=\"line\"><span class=\"undefined\">          &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"comment\">// 方法</span></span></span><br><span class=\"line\"><span class=\"javascript\">          click = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">              state.message = state.message.split(<span class=\"string\">''</span>).reverse().join(<span class=\"string\">''</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">          &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"comment\">// 监听函数</span></span></span><br><span class=\"line\"><span class=\"javascript\">          watchEffect(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">console</span>.log(state.message)</span></span><br><span class=\"line\"><span class=\"undefined\">          &#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"comment\">// 生命周期</span></span></span><br><span class=\"line\"><span class=\"javascript\">          onMounted(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span>&#123;&#125;)</span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">              state,</span></span><br><span class=\"line\"><span class=\"undefined\">              click</span></span><br><span class=\"line\"><span class=\"undefined\">          &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// 指令</span></span></span><br><span class=\"line\"><span class=\"undefined\">      directives: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"string\">'focus'</span>: <span class=\"function\">(<span class=\"params\">el, &#123; value &#125;</span>) =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">          <span class=\"keyword\">if</span> (value) &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">            el.focus()</span></span><br><span class=\"line\"><span class=\"undefined\">          &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"javascript\">  createApp(App).mount(<span class=\"string\">'#app'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"comment\">// Vue2 的 初始化方式</span></span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"keyword\">new</span> Vue(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      render: <span class=\"function\"><span class=\"params\">h</span> =&gt;</span> h(App)</span></span><br><span class=\"line\"><span class=\"javascript\">    &#125;).$mount(<span class=\"string\">'#app'</span>)</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"Vue2-版本响应式处理的一些局限性\"><a href=\"#Vue2-版本响应式处理的一些局限性\" class=\"headerlink\" title=\"Vue2 版本响应式处理的一些局限性\"></a>Vue2 版本响应式处理的一些局限性</h3><ul>\n<li>无法监控到数组下标的变化，导致通过数组下标添加元素，不能实时响应</li>\n<li>只能劫持对象的属性，从而需要对每个对象，每个属性进行遍历，如果，属性值是对象，还需要深度遍历。</li>\n</ul>\n<h4 id=\"Vue3-和-Vue2-响应式方案对比\"><a href=\"#Vue3-和-Vue2-响应式方案对比\" class=\"headerlink\" title=\"Vue3 和 Vue2 响应式方案对比\"></a>Vue3 和 Vue2 响应式方案对比</h4><table>\n<thead>\n<tr>\n<th>实现方式</th>\n<th>Vue2</th>\n<th>Vue3</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>差异</td>\n<td>劫持的是对象中的属性</td>\n<td>劫持的是整个对象</td>\n</tr>\n<tr>\n<td>优势</td>\n<td>兼容性好，支持IE9+，性能好</td>\n<td>能够监听整个对象的变化，对数组、对象的属性增加、删除都能监听到，不需要循环遍历监听，初始化阶段性能好</td>\n</tr>\n<tr>\n<td>不足</td>\n<td>不能监听对象、数组的增删、删除，不支持，Map，Set等数据结构的响应式</td>\n<td>不支持IE浏览器</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"Vue2-和Vue3-运行机制对比\"><a href=\"#Vue2-和Vue3-运行机制对比\" class=\"headerlink\" title=\"Vue2 和Vue3 运行机制对比\"></a>Vue2 和Vue3 运行机制对比</h2><p>Vue2 运行机制：<br><img src=\"https://gitee.com/hankanon/public/raw/master/WX20201221-015918@2x.png\" alt=\"\"><br>图片来自：<a href=\"https://juejin.cn/book/6844733705089449991\" target=\"_blank\" rel=\"noopener\">掘金小册：剖析 Vue.js 内部运行机制</a><br>Vue3 运行机制：<br><img src=\"https://gitee.com/hankanon/public/raw/master/20201221001406.png\" alt=\"\"></p>\n<h2 id=\"Vue3数据响应式原理\"><a href=\"#Vue3数据响应式原理\" class=\"headerlink\" title=\"Vue3数据响应式原理\"></a>Vue3数据响应式原理</h2><h3 id=\"Proxy-和-Reflect\"><a href=\"#Proxy-和-Reflect\" class=\"headerlink\" title=\"Proxy 和 Reflect\"></a>Proxy 和 Reflect</h3><ul>\n<li>Proxy： 可以理解成，在目标对象之前架设一层“拦截”，外界对该对象的访问，都必须先通过这层拦截，因此提供了一种机制，可以对外界的访问进行过滤和改写。Proxy 这个词的原意是代理，用在这里表示由它来“代理”某些操作，可以译为“代理器”</li>\n<li>Reflect： 是一个内置的对象，它提供拦截 JavaScript 操作的方法。Reflect不是一个函数对象，因此它是不可构造的。不能通过<strong>new运算符</strong>对其进行调用</li>\n</ul>\n<p>链接：<a href=\"https://es6.ruanyifeng.com/#docs/proxy\" target=\"_blank\" rel=\"noopener\">【Proxy具体用法】</a><br>链接：<a href=\"https://es6.ruanyifeng.com/#docs/reflect\" target=\"_blank\" rel=\"noopener\">【Reflect具体用法】</a></p>\n<h3 id=\"不同类型的Reactive\"><a href=\"#不同类型的Reactive\" class=\"headerlink\" title=\"不同类型的Reactive\"></a>不同类型的Reactive</h3><h4 id=\"①-reactive\"><a href=\"#①-reactive\" class=\"headerlink\" title=\"① reactive\"></a>① reactive</h4><p>建立响应式reactive，返回proxy对象，这个reactive可以深层次递归，也就是如果发现展开的属性值是引用类型的而且被引用，还会用reactive递归处理。而且属性是可以被修改的。</p>\n<h4 id=\"②-shallowReactive\"><a href=\"#②-shallowReactive\" class=\"headerlink\" title=\"② shallowReactive\"></a>② shallowReactive</h4><p>建立响应式shallowReactive，返回proxy对象。和reactive的区别是只建立一层的响应式，也就是说如果发现展开属性是引用类型也不会递归。</p>\n<h4 id=\"③-readonly\"><a href=\"#③-readonly\" class=\"headerlink\" title=\"③ readonly\"></a>③ readonly</h4><p>返回的proxy处理的对象，可以展开递归处理，但是属性是只读的，不能修改。可以做props传递给子组件使用。</p>\n<h4 id=\"④-shallowReadonly\"><a href=\"#④-shallowReadonly\" class=\"headerlink\" title=\"④ shallowReadonly\"></a>④ shallowReadonly</h4><p>返回经过处理的proxy对象，但是建立响应式属性是只读的，不展开引用也不递归转换，可以这用于为有状态组件创建props代理对象。</p>\n<h3 id=\"储存对象与proxy\"><a href=\"#储存对象与proxy\" class=\"headerlink\" title=\"储存对象与proxy\"></a>储存对象与proxy</h3><p>存储代理对象和原对象之间的映射关系<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 键值对 ： &#123; [targetObject] : obseved &#125; </span></span><br><span class=\"line\"><span class=\"comment\">// 键是原对象， 值是代理对象</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> reactiveMap = <span class=\"keyword\">new</span> <span class=\"built_in\">WeakMap</span>&lt;Target, any&gt;()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// &#123; [target] : obseved &#125;</span></span><br><span class=\"line\"><span class=\"comment\">// 键是原对象， 值是代理对象</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> readonlyMap = <span class=\"keyword\">new</span> <span class=\"built_in\">WeakMap</span>&lt;Target, any&gt;()</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"reactive入口解析\"><a href=\"#reactive入口解析\" class=\"headerlink\" title=\"reactive入口解析\"></a>reactive入口解析</h3><p>通过reactive() 函数来观察Vue3数据响应式的实现原理<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">reactive</span>(<span class=\"params\">target: object</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// if trying to observe a readonly proxy, return the readonly version.</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (target &amp;&amp; (target <span class=\"keyword\">as</span> Target)[ReactiveFlags.IS_READONLY]) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> target</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> createReactiveObject(</span><br><span class=\"line\">    target,</span><br><span class=\"line\">    <span class=\"literal\">false</span>,</span><br><span class=\"line\">    mutableHandlers,</span><br><span class=\"line\">    mutableCollectionHandlers</span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>其实就是通过createReactiveObject方法来产生一个Proxy，并根据不同的数据类型给了不同的处理方式</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createReactiveObject</span>(<span class=\"params\"></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">  target: Target,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">  isReadonly: boolean,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">  baseHandlers: ProxyHandler&lt;any&gt;,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">  collectionHandlers: ProxyHandler&lt;any&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!isObject(target)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> target</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 如果已经是proxy对象则直接返回，有个例外，如果是readOnly作用于响应式 则继续</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (</span><br><span class=\"line\">    target[ReactiveFlags.RAW] &amp;&amp; </span><br><span class=\"line\">    !(isReadonly &amp;&amp; target[ReactiveFlags.IS_REACTIVE]) </span><br><span class=\"line\">  ) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> target</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> proxyMap = isReadonly ? readonlyMap : reactiveMap</span><br><span class=\"line\">  <span class=\"comment\">// 已经有了对应的proxy映射 直接</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> existingProxy = proxyMap.get(target)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (existingProxy) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> existingProxy</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> targetType = getTargetType(target)</span><br><span class=\"line\">  <span class=\"comment\">// 只有在白名单中的数据类型才可以被响应式</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (targetType === TargetType.INVALID) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> target</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 通过Proxy API劫持target对象，把它变成响应式</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> proxy = <span class=\"keyword\">new</span> <span class=\"built_in\">Proxy</span>(</span><br><span class=\"line\">    target,</span><br><span class=\"line\">    <span class=\"comment\">// Map Set WeakMap WeakSet用collectionhandlers代理 Object Array用baseHandlers代理</span></span><br><span class=\"line\">    targetType === TargetType.COLLECTION ? collectionHandlers : baseHandlers</span><br><span class=\"line\">  )</span><br><span class=\"line\">  <span class=\"comment\">// 存储一个原始类型和proxy数据类型的映射 </span></span><br><span class=\"line\">  proxyMap.set(target, proxy)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> proxy</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>首先判断是否是对象类型，如果不是就直接返回，否则继续</li>\n<li>判断如果目标对象已经是proxy了直接返回，否则继续</li>\n<li>然后获取当前的目标对象的ProxyMap，如果存在就返回对应的proxy(在函数最后，我们会使用一个WeakMap类型的对象存储原始数据类型和proxy数据类型的映射) 否则继续</li>\n<li>判断目标对象是否在可响应式数据类型的白名单中，如果不在直接返回目标对象，否则继续。</li>\n</ul>\n<p><strong>响应式数据白名单只对这6种类型的数据做响应式处理</strong><br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">targetTypeMap</span>(<span class=\"params\">rawType: string</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (rawType) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'Object'</span>:</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'Array'</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> TargetType.COMMON</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'Map'</span>:</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'Set'</span>:</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'WeakMap'</span>:</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"string\">'WeakSet'</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> TargetType.COLLECTION</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> TargetType.INVALID</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"collectionHandlers-和-baseHandlers\"><a href=\"#collectionHandlers-和-baseHandlers\" class=\"headerlink\" title=\"collectionHandlers 和 baseHandlers\"></a>collectionHandlers 和 baseHandlers</h4><ul>\n<li>baseHandlers： 处理Object 和 Array 类型</li>\n<li>collectionHandlers： 处理 Map、Set、WeakMap、WeakSet 类型</li>\n</ul>\n<h4 id=\"普通的响应式对象处理\"><a href=\"#普通的响应式对象处理\" class=\"headerlink\" title=\"普通的响应式对象处理\"></a>普通的响应式对象处理</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> get = <span class=\"comment\">/*#__PURE__*/</span> createGetter()</span><br><span class=\"line\"><span class=\"keyword\">const</span> set = <span class=\"comment\">/*#__PURE__*/</span> createSetter()</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> mutableHandlers: ProxyHandler&lt;object&gt; = &#123;</span><br><span class=\"line\">  get, <span class=\"comment\">// 对数据的读取属性进行拦截 包含target.语法和target[]</span></span><br><span class=\"line\">  set, <span class=\"comment\">// 对数据的存入属性进行拦截</span></span><br><span class=\"line\">  deleteProperty, <span class=\"comment\">// delete操作符进行拦截 可以监听到属性的删除操作</span></span><br><span class=\"line\">  has, <span class=\"comment\">// 对对象的in操作符进行属性拦截</span></span><br><span class=\"line\">  ownKeys <span class=\"comment\">// 访问对象属性名的时候会触发ownKeys函数</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"createGetter函数\"><a href=\"#createGetter函数\" class=\"headerlink\" title=\"createGetter函数\"></a>createGetter函数</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createGetter</span>(<span class=\"params\">isReadonly = false, shallow = false</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get</span>(<span class=\"params\">target: Target, key: string | symbol, receiver: object</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 如果是只读属性 直接return target</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 求值 </span></span><br><span class=\"line\">    <span class=\"comment\">// 如果是数组单独处理</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> targetIsArray = isArray(target)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (targetIsArray &amp;&amp; hasOwn(arrayInstrumentations, key)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"built_in\">Reflect</span>.get(arrayInstrumentations, key, receiver)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 对象</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> res = <span class=\"built_in\">Reflect</span>.get(target, key, receiver)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!isReadonly) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 依赖收集</span></span><br><span class=\"line\">      track(target, TrackOpTypes.GET, key)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 递归调用响应式</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (isObject(res)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> isReadonly ? readonly(res) : reactive(res)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 返回结果</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> res</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>当我们访问对象的属性的时候会触发get函数，这个函数中的主要步骤有三个，首先会使用Reflect.get进行求值, 然后判断是否是只读的，如果不是就调用track进行依赖收集，然后对求值的结果进行判断，如果是对象则递归调用reactive或者readonly对结果继续进行响应式处理,最后将获取的结果返回。</p>\n<p>注意：这里和Vue2响应式处理的方式有所不同，这也是Vue3响应式在初始化的时候性能优化的一个点。</p>\n<ul>\n<li>Vue2在实现响应式的时候会在初始化阶段判断对象的属性是否是Object类型,如果是的话就会递归的调用Observer将子对象也变成响应式。</li>\n<li>Vue3的实现流程则是在初始化阶段的时候只对第一层的属性进行响应式，当返回proxy的属性被访且是对象的话再进行递归响应式，Proxy劫持的是对象本身，并不能劫持子对象的变化，正是利用这种特性可以延时定义子对象响应式的实现，在初始化的时候性能也会得到提升。</li>\n</ul>\n<h5 id=\"createSetter函数\"><a href=\"#createSetter函数\" class=\"headerlink\" title=\"createSetter函数\"></a>createSetter函数</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createSetter</span>(<span class=\"params\">shallow = false</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">set</span>(<span class=\"params\"></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    target: object,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    key: string | symbol,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    value: unknown,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">    receiver: object</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">  </span>): <span class=\"title\">boolean</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 1.先获取oldValue</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> oldValue = (target <span class=\"keyword\">as</span> any)[key]</span><br><span class=\"line\">    <span class=\"comment\">// 2.设置新值</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> result = <span class=\"built_in\">Reflect</span>.set(target, key, value, receiver)</span><br><span class=\"line\">    <span class=\"comment\">// don't trigger if target is something up in the prototype chain of original</span></span><br><span class=\"line\">    <span class=\"comment\">// 派发更新</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (target === toRaw(receiver)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!hadKey) &#123;</span><br><span class=\"line\">        trigger(target, TriggerOpTypes.ADD, key, value)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (hasChanged(value, oldValue)) &#123;</span><br><span class=\"line\">        trigger(target, TriggerOpTypes.SET, key, value, oldValue)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>当我们更新响应式对象的属性的时候会触发set函数,set函数内部的主要步骤也是三个，首先获取这个属性的oldValue，然后通过Reflect.set对属性进行赋值操作,最后调用trigger进行派发更新，在派发更新阶段如果是新增属性则trigger的type是add,如果value!==oldValue则trigger的type是set。</p>\n<h4 id=\"track-依赖收集\"><a href=\"#track-依赖收集\" class=\"headerlink\" title=\"track - 依赖收集\"></a>track - 依赖收集</h4><h4 id=\"trigger-派发更新\"><a href=\"#trigger-派发更新\" class=\"headerlink\" title=\"trigger - 派发更新\"></a>trigger - 派发更新</h4><h2 id=\"完整的响应式图\"><a href=\"#完整的响应式图\" class=\"headerlink\" title=\"完整的响应式图\"></a>完整的响应式图</h2><p><img src=\"https://gitee.com/hankanon/public/raw/master/20201220225052.png\" alt=\"\"><br>链接：<a href=\"https://juejin.cn/post/6874754047891472391\" target=\"_blank\" rel=\"noopener\">图片来自掘金：深入学习vue3.0核心实现原理</a></p>\n<p><strong>问题：Vue2 中可以this访问到定义在data、methods中的变量或方法，是通过 defineProperty 进行数据上下文代理，让我们可以直接通过 this 进行访问，并在更改值后触发 get、set。<br>Vue3 是怎么实现的？</strong></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckoh4vrfa0000e7s67n8w1f9x","category_id":"ckoh4vrfo0004e7s64xcv1blq","_id":"ckoh4vrg0000ce7s6go4x2lvf"},{"post_id":"ckoh4vrfj0002e7s6053o58g8","category_id":"ckoh4vrfo0004e7s64xcv1blq","_id":"ckoh4vrg3000fe7s6yem7cec8"},{"post_id":"ckoh4vrfv0008e7s6utncj34w","category_id":"ckoh4vrg0000be7s60yovaebh","_id":"ckoh4vrg4000ie7s6p0js3mr9"},{"post_id":"ckoh4vrhe000pe7s6psg41mhy","category_id":"ckoh4vrhh000qe7s6saa3fggp","_id":"ckoh4vrhi000te7s6glxgd9pv"}],"PostTag":[{"post_id":"ckoh4vrfa0000e7s67n8w1f9x","tag_id":"ckoh4vrfp0005e7s6ysd2gnr0","_id":"ckoh4vrg2000ee7s6axh69hu2"},{"post_id":"ckoh4vrfa0000e7s67n8w1f9x","tag_id":"ckoh4vrfw000ae7s68ptnvkel","_id":"ckoh4vrg3000ge7s65ssjzpk1"},{"post_id":"ckoh4vrfj0002e7s6053o58g8","tag_id":"ckoh4vrfp0005e7s6ysd2gnr0","_id":"ckoh4vrg5000ke7s6rmkmlpgq"},{"post_id":"ckoh4vrfj0002e7s6053o58g8","tag_id":"ckoh4vrfw000ae7s68ptnvkel","_id":"ckoh4vrg5000le7s6xyoehz56"},{"post_id":"ckoh4vrfv0008e7s6utncj34w","tag_id":"ckoh4vrg4000je7s67894ne9m","_id":"ckoh4vrg6000ne7s6pyq2nbsw"},{"post_id":"ckoh4vrfv0008e7s6utncj34w","tag_id":"ckoh4vrg5000me7s6guwar1yn","_id":"ckoh4vrg6000oe7s67nm0b8qn"},{"post_id":"ckoh4vrhe000pe7s6psg41mhy","tag_id":"ckoh4vrhh000re7s6h2w8yo6q","_id":"ckoh4vrhi000se7s621gw4juh"}],"Tag":[{"name":"JavaScript","_id":"ckoh4vrfp0005e7s6ysd2gnr0"},{"name":"设计模式","_id":"ckoh4vrfw000ae7s68ptnvkel"},{"name":"NodeJS代码调试","_id":"ckoh4vrg4000je7s67894ne9m"},{"name":"vsCode","_id":"ckoh4vrg5000me7s6guwar1yn"},{"name":"Vue3 原理","_id":"ckoh4vrhh000re7s6h2w8yo6q"}]}}